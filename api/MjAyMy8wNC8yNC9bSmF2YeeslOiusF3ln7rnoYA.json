{"title":"[Java笔记]基础","date":"2023-04-24T00:00:00.000Z","date_formatted":{"ll":"Apr 24, 2023","L":"04/24/2023","MM-DD":"04-24"},"link":"2023/04/24/[Java笔记]基础","comments":true,"categories":["Java"],"updated":"2023-04-24T00:00:00.000Z","content":"<blockquote>\n<p>Java笔记</p>\n</blockquote>\n<h2 id=\"java起源\">Java起源<a title=\"#java起源\" href=\"#java起源\"></a></h2>\n<p>Java语言最初是由美国<code>Sun Microsystems</code>公司的<code>James Gosling</code>等人开发的一种面向对象程序设计语言。Java的起源可以追溯到20世纪90年代初.Java语言于<code>1995年5月23日</code>正式发布。Java语言具有面向对象、平台独立、安全性以及可以开发一种称为Applet程序的特点.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/Typora/202304241931138.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p>Java是简单的 (simple)、面向对象的 (object oriented)、分布式的 (distributed)、解释型的 (interpreted)、健壮的 (robust)、安全的 (secure)、体系结构中立的(architecture neutral)、可移植的 (portable)、高性能的(high performance)、 多线程的 (multithreaded) 和动态的 (dynamic)。</p>\n<h2 id=\"java平台和开发环境\">Java平台和开发环境<a title=\"#java平台和开发环境\" href=\"#java平台和开发环境\"></a></h2>\n<p>Java平台有三大版本，分别代表Java 的三个应用领域</p>\n<ul>\n<li>Java标准版 (Java Standard Edition,<code>Java SE</code>): 用来开发客户端的应用程序，应用程序可以独立运行或作为 Applet在 Web 浏览器中运行</li>\n<li>Java企业版 (Java Enterprise Edition,<code>Java EE</code>): 用来开发服务器端的应用程序。例如，Java Servlet和JSP(JavaServer Pages), 以及 JSF(JavaServer Faces)。</li>\n<li>Java 微型版 (Java Micro Edition,<code>Java ME</code>): 用来开发移动设备(如手机)上运行的应用程序。</li>\n</ul>\n<h3 id=\"jdk/jre/jvm\">JDK/JRE/JVM<a title=\"#jdk/jre/jvm\" href=\"#jdk/jre/jvm\"></a></h3>\n<p><code>JVM</code> Java Virtual Machine,JVM, 一种运行字节码的应用程序.<br>\n两个发行包:<br>\n<code>JRE</code> Java Runtime Environment, 包括 JVM 和核心类库，最适合用来运行字节码。如果只需运行 Java 程序，就只需安装JRE。<br>\n<code>JDK</code> Java Development Toolkit, 它包括 JRE, 外加一个编译器和其他工具。它是编译和运行 Java程序的必备软件</p>\n<h2 id=\"字节码与平台独立\">字节码与平台独立<a title=\"#字节码与平台独立\" href=\"#字节码与平台独立\"></a></h2>\n<p>在Java编程中，源代码被编译成字节码 (bytecode)。字节码不是本地机代码，所以它不能直接运行。字节码只能在 Java 虚拟机上运行。 JVM 是一种解释字节码的本机应用程序。JVM 在众多平台上都可用，从而使 Java 成为一种跨平台的语言，进而实现“编写一次，到处运行”。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/Typora/202304241959293.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"cmd编译运行\">CMD编译运行<a title=\"#cmd编译运行\" href=\"#cmd编译运行\"></a></h2>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javac &lt;filename.java&gt;</span><br><span class=\"line\">java &lt;filename&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"java标识符和关键字\">Java标识符和关键字<a title=\"#java标识符和关键字\" href=\"#java标识符和关键字\"></a></h2>\n<h3 id=\"java标识符定义\">Java标识符定义<a title=\"#java标识符定义\" href=\"#java标识符定义\"></a></h3>\n<ol>\n<li>包名、类名、方法名、参数名、变量名等，这些符号被称为标识符。</li>\n<li>标识符可以由字母、数字、下划线_ 和 美元符号 $ 组成</li>\n<li>标识符不能以数字开头，不能是java中的关键字。</li>\n<li>首字符之后可以是字母（A­Z 或者 a­z）、下划线_ 、美元符号 $ 或数字的任何字符。</li>\n<li>Java 区分大小写.</li>\n<li>不可以使用关键字和保留字作为标识符，但标识符中能包含关键字和保留字。</li>\n<li>标识符不能包含空格。</li>\n</ol>\n<p>这里的<code>字母指的是 Unicode 编码字符集</code>, 可以表示世界各国的语言符号.</p>\n<h3 id=\"java标识符规则\">Java标识符规则<a title=\"#java标识符规则\" href=\"#java标识符规则\"></a></h3>\n<ol>\n<li>包名所有字母必须小写。例如：cn.com.test</li>\n<li>类名和接口名每个单词的首字母都要大写。例如：ArrayList</li>\n<li>常量名所有的字母都大写，单词之间用下划线连接。例如：DAY_OF_MONTH 变量名和方法名的第一个单词首字母小写，从第二个单词开始，每个单词首字母大写。例如：lineName、getLingNumber</li>\n<li>在程序中，应该尽量使用有意义的英文单词来定义标识符，使得程序便于阅读。</li>\n</ol>\n<h3 id=\"关键字\">关键字<a title=\"#关键字\" href=\"#关键字\"></a></h3>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"padding:0\"></th>\n<th style=\"padding:0\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">数据类型</td>\n<td style=\"text-align:left\">boolean、int、long、short、byte、float、double、char、class、interface、enum、void</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">流程控制</td>\n<td style=\"text-align:left\">if、else、do、while、for、switch、case、default、break、continue、return</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">异常处理</td>\n<td style=\"text-align:left\">try、catch、finally、throw、throws</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">修饰符</td>\n<td style=\"text-align:left\">public、protected、private、final、void、static、strict、abstract、transient、synchronized、volatile、native</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">类与类之间关系</td>\n<td style=\"text-align:left\">extends、implements</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">建立实例及引用实例</td>\n<td style=\"text-align:left\">this、supper、instanceof、new</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">导包</td>\n<td style=\"text-align:left\">package、import</td>\n</tr>\n</tbody>\n</table></div></div><p><code>保留字</code><br>\nJava版本尚未使用，但以后版本可能会作为关键字使用。</p>\n<p><code>goto、const、byValue、cast、future、 generic、 inner、 operator、 outer、 rest、 var</code></p>\n<blockquote>\n<p>注意：java中true、false、friendly和null不属于关键字，也不是保留字，它们只是显式常量值，但是你在程序中不能使用它们作为标识符。<br>\njava关键字和保留字都是小写。即null是关键字，NULL不是关键字；TRUE、FALSE也不是关键字。<br>\nsizeof 是 C/C++ 中的方法，Java 中并没有这个方法，也没有该关键字 或 保留字</p>\n</blockquote>\n<h2 id=\"数据类型\">数据类型<a title=\"#数据类型\" href=\"#数据类型\"></a></h2>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/Typora/202305031330387.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p>java中没有无符号数</p>\n<h2 id=\"字面值和常量\">字面值和常量<a title=\"#字面值和常量\" href=\"#字面值和常量\"></a></h2>\n<p>字面值/字面量(literals)是某种类型值的表示形式.<br>\n常量(constant)是在程序运行过程中，其值不能被改变的量。常量实际上是一个由 final 关键字修饰的变量，一旦为其赋值，其值在程序运行中就不能被改变.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">iterals</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">final</span> <span class=\"type\">int</span> <span class=\"variable\">dec</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">        <span class=\"keyword\">final</span> <span class=\"type\">int</span> <span class=\"variable\">bin</span> <span class=\"operator\">=</span> <span class=\"number\">0b0110</span>;</span><br><span class=\"line\">        <span class=\"keyword\">final</span> <span class=\"type\">int</span> <span class=\"variable\">oct</span> <span class=\"operator\">=</span> <span class=\"number\">021</span>;</span><br><span class=\"line\">        <span class=\"keyword\">final</span> <span class=\"type\">int</span> <span class=\"variable\">hex</span> <span class=\"operator\">=</span> <span class=\"number\">0x31</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">scanner</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        System.out.println(dec); <span class=\"comment\">// 10</span></span><br><span class=\"line\">        System.out.println(bin); <span class=\"comment\">// 6</span></span><br><span class=\"line\">        System.out.println(oct); <span class=\"comment\">// 17</span></span><br><span class=\"line\">        System.out.println(hex); <span class=\"comment\">// 49</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">final</span> <span class=\"type\">char</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;\\141&#x27;</span>;</span><br><span class=\"line\">        System.out.println(c);          <span class=\"comment\">// a , \\三个八进制数表示字符</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">final</span> <span class=\"type\">float</span> <span class=\"variable\">f</span> <span class=\"operator\">=</span> <span class=\"number\">1234_1234_5678.1234F</span>;    <span class=\"comment\">// Java7开始数值型字面量可以用下划线分组</span></span><br><span class=\"line\">        System.out.println(f);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"运算符优先级\">运算符优先级<a title=\"#运算符优先级\" href=\"#运算符优先级\"></a></h2>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/Typora/202305031420574.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"字符串拼接\">字符串拼接<a title=\"#字符串拼接\" href=\"#字符串拼接\"></a></h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">     System.out.println(<span class=\"number\">9</span> + <span class=\"number\">10</span> + <span class=\"string\">&quot;---&quot;</span>);</span><br><span class=\"line\">     <span class=\"comment\">// 拼接字符串从左往右 19---</span></span><br><span class=\"line\">     System.out.println(<span class=\"string\">&quot;==&quot;</span> + <span class=\"string\">&#x27;k&#x27;</span> + <span class=\"literal\">false</span>); </span><br><span class=\"line\">     <span class=\"comment\">// ==kfalse</span></span><br><span class=\"line\">     <span class=\"comment\">// 注意和只有和字符串拼接才会隐式转换为字符串输出, 如果一个数字和字符拼接会转换成ASCII码的加法, &#x27;0&#x27;对应ASCII码48</span></span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"知识点\">知识点<a title=\"#知识点\" href=\"#知识点\"></a></h2>\n<ol>\n<li>\n<p>与 C/C++语言不同， Java的布尔型数据不能与其他任何数据类型相互转换，即 false 和 true不对应于0和非0的整数值。</p>\n</li>\n<li>\n<p>java的源文件名要和类名一样</p>\n</li>\n<li>\n<p>逻辑运算符的操作数只能是boolean, &amp;&amp; 与 &amp; 的区别, 前者属于短路运算符.</p>\n</li>\n<li>\n<p><code>&gt;&gt;&gt;</code> 无符号右移.</p>\n</li>\n<li>\n<p><code>println()</code>输出结果后自动换行<br>\n<code>print() </code>输出结果不换行<br>\n<code>printf()</code>和C一样, 按照格式字符串输出<br>\n<code>next()</code> 遇到回车才停止</p>\n</li>\n<li>\n<p>自动类型提升</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">   <span class=\"type\">byte</span> <span class=\"variable\">b1</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">   <span class=\"type\">byte</span> <span class=\"variable\">b2</span> <span class=\"operator\">=</span> <span class=\"number\">30</span>;</span><br><span class=\"line\">   <span class=\"type\">byte</span> <span class=\"variable\">bs</span> <span class=\"operator\">=</span> (<span class=\"type\">byte</span>)(b1 + b2);</span><br><span class=\"line\">   <span class=\"comment\">// byte short char 在使用的时候会被先转换为int 使用(type)(statement)完成强制转换</span></span><br><span class=\"line\">   System.out.println(bs); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>java中的switch</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">     <span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">     System.out.println(<span class=\"string\">&quot;please input the order of game you wanna play/n&quot;</span>);</span><br><span class=\"line\">     System.out.println(<span class=\"string\">&quot;1. DOTA, 2. LOL, 3. DNF, 4.AC/n&quot;</span>);</span><br><span class=\"line\">     <span class=\"type\">byte</span> game;</span><br><span class=\"line\">     game = sc.nextByte();</span><br><span class=\"line\">     <span class=\"keyword\">switch</span> (game) &#123;</span><br><span class=\"line\">         <span class=\"comment\">// 这里Switch括号内的待匹配值为byte short int char</span></span><br><span class=\"line\">         <span class=\"comment\">// JDK5 以后可以是枚举, JDK7 以后可以是String</span></span><br><span class=\"line\">         <span class=\"comment\">// case值不能重复 只能是字面量</span></span><br><span class=\"line\">         <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">             System.out.println(<span class=\"string\">&quot;DOTA running&quot;</span>);</span><br><span class=\"line\">             <span class=\"keyword\">break</span>;</span><br><span class=\"line\">         <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">             System.out.println(<span class=\"string\">&quot;LOL launching&quot;</span>);</span><br><span class=\"line\">             <span class=\"keyword\">break</span>;</span><br><span class=\"line\">         <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">             System.out.println(<span class=\"string\">&quot;DNF loading&quot;</span>);</span><br><span class=\"line\">             <span class=\"keyword\">break</span>;</span><br><span class=\"line\">         <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">             System.out.println(<span class=\"string\">&quot;AC is nice&quot;</span>);</span><br><span class=\"line\">             <span class=\"keyword\">break</span>;</span><br><span class=\"line\">         <span class=\"keyword\">default</span>:</span><br><span class=\"line\">             System.out.println(<span class=\"string\">&quot;game is boring&quot;</span>);</span><br><span class=\"line\">             <span class=\"keyword\">break</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// JDK 12 switch case 新写法 -&gt; &#123;&#125; 省略:和break</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">num</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (num) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>,<span class=\"number\">2</span> -&gt; System.out.println(<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 多个case可以逗号分隔写在一起</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">3</span> -&gt; &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"number\">33</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">default</span> -&gt; &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;default&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">char</span> <span class=\"title function_\">NumToRome</span><span class=\"params\">(<span class=\"type\">char</span> n)</span>&#123;</span><br><span class=\"line\">       <span class=\"comment\">// Ⅰ－1、Ⅱ－2、Ⅲ－3、Ⅳ－4、Ⅴ－5、Ⅵ－6、Ⅶ－7、Ⅷ－8、Ⅸ－9       </span></span><br><span class=\"line\">       n = <span class=\"keyword\">switch</span> (n)&#123;  <span class=\"comment\">// JDK 12 后的新特性, 可以用变量接受switch的值</span></span><br><span class=\"line\">           <span class=\"keyword\">case</span> <span class=\"string\">&#x27;1&#x27;</span> -&gt; <span class=\"string\">&#x27;Ⅰ&#x27;</span>;</span><br><span class=\"line\">           <span class=\"keyword\">case</span> <span class=\"string\">&#x27;2&#x27;</span> -&gt; <span class=\"string\">&#x27;Ⅱ&#x27;</span>;</span><br><span class=\"line\">           <span class=\"keyword\">case</span> <span class=\"string\">&#x27;3&#x27;</span> -&gt; <span class=\"string\">&#x27;Ⅲ&#x27;</span>;</span><br><span class=\"line\">           <span class=\"keyword\">case</span> <span class=\"string\">&#x27;4&#x27;</span> -&gt; <span class=\"string\">&#x27;Ⅳ&#x27;</span>;</span><br><span class=\"line\">           <span class=\"keyword\">case</span> <span class=\"string\">&#x27;5&#x27;</span> -&gt; <span class=\"string\">&#x27;Ⅴ&#x27;</span>;</span><br><span class=\"line\">           <span class=\"keyword\">case</span> <span class=\"string\">&#x27;6&#x27;</span> -&gt; <span class=\"string\">&#x27;Ⅵ&#x27;</span>;</span><br><span class=\"line\">           <span class=\"keyword\">case</span> <span class=\"string\">&#x27;7&#x27;</span> -&gt; <span class=\"string\">&#x27;Ⅶ&#x27;</span>;</span><br><span class=\"line\">           <span class=\"keyword\">case</span> <span class=\"string\">&#x27;8&#x27;</span> -&gt; <span class=\"string\">&#x27;Ⅷ&#x27;</span>;</span><br><span class=\"line\">           <span class=\"keyword\">case</span> <span class=\"string\">&#x27;9&#x27;</span> -&gt; <span class=\"string\">&#x27;Ⅸ&#x27;</span>;</span><br><span class=\"line\">           <span class=\"keyword\">default</span> -&gt; <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">       &#125;;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>Java中的break和continue可以加一个标签以调出多层循环, 像C中goto那样. 但不能跳转到不相关的标签块.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span>[][] arr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">10</span>][<span class=\"number\">10</span>];</span><br><span class=\"line\">    there:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; arr.length; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>((i*<span class=\"number\">10</span> + j) == <span class=\"number\">50</span>) <span class=\"keyword\">continue</span> there;</span><br><span class=\"line\">           arr[i][j] = i*<span class=\"number\">10</span> + j;</span><br><span class=\"line\">            System.out.printf(<span class=\"string\">&quot;%d\\t&quot;</span>, arr[i][j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>java中没有sizeof运算符, C/C++中 sizeof 最初设计来是为了兼容不同设备的, 但java因为有JVM解决了这个问题, 所以不需要sizeof运算符.</p>\n</li>\n<li>\n<p>java中浮点运算结果可能溢出, 但不会溢出导致异常, 下溢结果为0, 上溢结果为Infinity 或 -Infinity, 出现没有意义的结果显示NaN</p>\n</li>\n<li>\n<p>main方法中的参数 <code>String[] args</code> 原先是用来接收键盘参数的, 现在已经不用, 可以在IDE中配置configuration</p>\n</li>\n<li>\n<p>指定环境变量时需要指定到程序所在目录; windows在指定文件夹打开cmd可以直接在路径栏输入cmd回车.</p>\n</li>\n</ol>\n<p><strong>参考</strong></p>\n<ol>\n<li>《Java程序设计(第3版)》 IBSN 9787302485520</li>\n<li><a href=\"https://docs.oracle.com/en/java/javase/19/docs/api/index.html\" target=\"_blank\">Java API 文档</a></li>\n<li><a href=\"https://blog.csdn.net/yh991314/article/details/108521095#:~:text=Java%E6%A0%87%E8%AF%86%E7%AC%A6%E5%AE%9A%E4%B9%89.%201%E3%80%81%E5%8C%85%E5%90%8D%E3%80%81%E7%B1%BB%E5%90%8D%E3%80%81%E6%96%B9%E6%B3%95%E5%90%8D%E3%80%81%E5%8F%82%E6%95%B0%E5%90%8D%E3%80%81%E5%8F%98%E9%87%8F%E5%90%8D%E7%AD%89%EF%BC%8C%E8%BF%99%E4%BA%9B%E7%AC%A6%E5%8F%B7%E8%A2%AB%E7%A7%B0%E4%B8%BA%E6%A0%87%E8%AF%86%E7%AC%A6%E3%80%82.%202%E3%80%81%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%AF%E4%BB%A5%E7%94%B1%E5%AD%97%E6%AF%8D%E3%80%81%E6%95%B0%E5%AD%97%E3%80%81%E4%B8%8B%E5%88%92%E7%BA%BF_%20%E5%92%8C%20%E7%BE%8E%E5%85%83%E7%AC%A6%E5%8F%B7%20%24%20%E7%BB%84%E6%88%90.%203%E3%80%81%E6%A0%87%E8%AF%86%E7%AC%A6%E4%B8%8D%E8%83%BD%E4%BB%A5%E6%95%B0%E5%AD%97%E5%BC%80%E5%A4%B4%EF%BC%8C%E4%B8%8D%E8%83%BD%E6%98%AFjava%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97%E3%80%82.,%E5%8C%BA%E5%88%86%E5%A4%A7%E5%B0%8F%E5%86%99%EF%BC%8C%E5%9B%A0%E6%AD%A4%20myvar%20%E5%92%8C%20MyVar%20%E6%98%AF%E4%B8%A4%E4%B8%AA%E4%B8%8D%E5%90%8C%E7%9A%84%E6%A0%87%E8%AF%86%E7%AC%A6%E3%80%82.%206%E3%80%81%E4%B8%8D%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E5%85%B3%E9%94%AE%E5%AD%97%E5%92%8C%E4%BF%9D%E7%95%99%E5%AD%97%E4%BD%9C%E4%B8%BA%E6%A0%87%E8%AF%86%E7%AC%A6%EF%BC%8C%E4%BD%86%E6%A0%87%E8%AF%86%E7%AC%A6%E4%B8%AD%E8%83%BD%E5%8C%85%E5%90%AB%E5%85%B3%E9%94%AE%E5%AD%97%E5%92%8C%E4%BF%9D%E7%95%99%E5%AD%97%E3%80%82.%207%E3%80%81%E6%A0%87%E8%AF%86%E7%AC%A6%E4%B8%8D%E8%83%BD%E5%8C%85%E5%90%AB%E7%A9%BA%E6%A0%BC%E3%80%82.%20%E4%BE%8B%E5%A6%82%EF%BC%9A.\" target=\"_blank\">Java标识符和关键字(超详细）</a></li>\n<li><a href=\"https://cloud.tencent.com/developer/article/2099088#:~:text=Java%E6%A0%87%E8%AF%86%E7%AC%A6%E7%94%B1%E6%95%B0%E5%AD%97%EF%BC%8C%E5%AD%97%E6%AF%8D%E5%92%8C%E4%B8%8B%E5%88%92%E7%BA%BF%EF%BC%88_%EF%BC%89%EF%BC%8C%E7%BE%8E%E5%85%83%E7%AC%A6%E5%8F%B7%EF%BC%88%24%EF%BC%89%E7%BB%84%E6%88%90%E3%80%82,%E6%AD%A4%E5%A4%84%E7%9A%84%E5%AD%97%E6%AF%8D%E5%B9%B6%E4%B8%8D%E5%B1%80%E9%99%90%E4%BA%8E26%E4%B8%AA%E8%8B%B1%E6%96%87%E5%AD%97%E6%AF%8D%EF%BC%8C%E8%80%8C%E4%B8%94%E5%8F%AF%E4%BB%A5%E5%8C%85%E5%90%AB%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6%E3%80%81%E6%97%A5%E6%96%87%E5%AD%97%E7%AC%A6%E7%AD%89%E3%80%82%20Java%E8%AF%AD%E8%A8%80%E6%94%AF%E6%8C%81Unicode6.2.0%E5%AD%97%E7%AC%A6%E9%9B%86%EF%BC%8C%E5%9B%A0%E6%AD%A4Java%E7%9A%84%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8Unicode6.0.0%E6%89%80%E8%83%BD%E8%A1%A8%E7%A4%BA%E7%9A%84%E5%A4%9A%E7%A7%8D%E8%AF%AD%E8%A8%80%E7%9A%84%E5%AD%97%E7%AC%A6%E3%80%82\" target=\"_blank\">JAVA合法标识符</a></li>\n</ol>\n","prev":{"title":"[WPS]","link":"2023/04/25/[WPS]"},"next":{"title":"[Java笔记]数组&字符串","link":"2023/04/24/[Java笔记]数组&字符串"},"plink":"https://s1acr.github.io/2023/04/24/[Java笔记]基础/","toc":[{"id":"java起源","title":"Java起源","index":"1"},{"id":"java平台和开发环境","title":"Java平台和开发环境","index":"2","children":[{"id":"jdk/jre/jvm","title":"JDK&#x2F;JRE&#x2F;JVM","index":"2.1"}]},{"id":"字节码与平台独立","title":"字节码与平台独立","index":"3"},{"id":"cmd编译运行","title":"CMD编译运行","index":"4"},{"id":"java标识符和关键字","title":"Java标识符和关键字","index":"5","children":[{"id":"java标识符定义","title":"Java标识符定义","index":"5.1"},{"id":"java标识符规则","title":"Java标识符规则","index":"5.2"},{"id":"关键字","title":"关键字","index":"5.3"}]},{"id":"数据类型","title":"数据类型","index":"6"},{"id":"字面值和常量","title":"字面值和常量","index":"7"},{"id":"运算符优先级","title":"运算符优先级","index":"8"},{"id":"字符串拼接","title":"字符串拼接","index":"9"},{"id":"知识点","title":"知识点","index":"10"}],"reward":true,"copyright":{"author":"slacr_","license":"<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" target=\"_blank\"><img src = \"/lib/cc-by-nc-sa.svg\">CC BY-NC-ND 4.0</a>","published":"April 24, 2023","updated":"April 24, 2023"},"reading_time":"2236 words in 15 min"}