{"title":"[Java笔记]数组&字符串","date":"2023-04-24T00:00:00.000Z","date_formatted":{"ll":"Apr 24, 2023","L":"04/24/2023","MM-DD":"04-24"},"link":"2023/04/24/[Java笔记]数组&字符串","comments":true,"categories":["Java"],"updated":"2023-04-24T00:00:00.000Z","content":"<blockquote>\n<p>Java笔记</p>\n</blockquote>\n<h2 id=\"数组\">数组<a title=\"#数组\" href=\"#数组\"></a></h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 声明数组</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr_1;</span><br><span class=\"line\">        String arr_2[];   <span class=\"comment\">// 两种形式</span></span><br><span class=\"line\">        <span class=\"comment\">// 创建数组</span></span><br><span class=\"line\">        arr_1 = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">5</span>];</span><br><span class=\"line\">        arr_2 = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[<span class=\"number\">5</span>];</span><br><span class=\"line\">        <span class=\"comment\">// Java数组大小可以在运行时指定, C/C++不允许, 因为声明的时候仅要求确定引用(数组名);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 数组初始化器</span></span><br><span class=\"line\">        <span class=\"type\">double</span>[] arr_3 = <span class=\"keyword\">new</span> <span class=\"title class_\">double</span>[]&#123;<span class=\"number\">1.0</span>, <span class=\"number\">2.1</span>, <span class=\"number\">3.2</span>, <span class=\"number\">4.3</span>&#125;;</span><br><span class=\"line\">        <span class=\"type\">double</span>[] arr_s = &#123;<span class=\"number\">1.0</span>, <span class=\"number\">4.0</span>&#125;;        <span class=\"comment\">// 简写</span></span><br><span class=\"line\">        <span class=\"comment\">// 声明数组的同时也可以对数组元素初始化, 也称静态初始化</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 增强的for循环, 标识符获取每次循环的值</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">double</span> v : arr_3) &#123;</span><br><span class=\"line\">            System.out.print(v + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 数组复制, 调用System.arraycopy()方法</span></span><br><span class=\"line\">        <span class=\"type\">double</span>[] arr_4 = <span class=\"keyword\">new</span> <span class=\"title class_\">double</span>[<span class=\"number\">6</span>];</span><br><span class=\"line\">        System.arraycopy(arr_3,<span class=\"number\">0</span>,arr_4, <span class=\"number\">0</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">double</span> v : arr_4) &#123;</span><br><span class=\"line\">            System.out.print(v + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"可变参数(variable-argument)\">可变参数(variable argument)<a title=\"#可变参数(variable-argument)\" href=\"#可变参数(variable-argument)\"></a></h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 函数参数表的最后一个参数为 ... arr, 有点像 js 里面的 数组 解构符</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">double</span> <span class=\"title function_\">getAVG</span><span class=\"params\">(String sign, <span class=\"type\">double</span> ... params)</span> &#123;</span><br><span class=\"line\">        System.out.println(sign);</span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">avg</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; params.length; i++) &#123;</span><br><span class=\"line\">            avg += params[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> avg / params.length;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(getAVG(<span class=\"string\">&quot;slacr_&quot;</span>, <span class=\"number\">3.0</span>, <span class=\"number\">4.0</span>, <span class=\"number\">5.0</span>));</span><br><span class=\"line\">        System.out.println(getAVG(<span class=\"string\">&quot;re&quot;</span>, <span class=\"number\">2.0</span>, <span class=\"number\">8.0</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"arrays-类\">Arrays 类<a title=\"#arrays-类\" href=\"#arrays-类\"></a></h2>\n<p>Arrays 的 sort()方法可以对数组元素排序。使用该方法的排序是稳定的 (stable), 即相等的元素在排序结果中不会改变顺序。对于基本数据类型，按数据的升序排序。对于对象数组的排序要求数组元素的类必须实现 Comparable 接口，若要改变排序顺序，还可以指定一个比较器对象。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Arrays.sort()</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        String[] arr_s = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[]&#123;<span class=\"string\">&quot;Bob&quot;</span>, <span class=\"string\">&quot;Alice&quot;</span>, <span class=\"string\">&quot;Haskell&quot;</span>, <span class=\"string\">&quot;Ruby&quot;</span>, <span class=\"string\">&quot;Scala&quot;</span>&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String arr : arr_s) &#123;</span><br><span class=\"line\">            System.out.print(arr + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\">        </span><br><span class=\"line\">        Arrays.sort(arr_s);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String arr : arr_s) &#123;</span><br><span class=\"line\">            System.out.print(arr + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Arrays.binarySearch()</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">        Arrays.sort(arr);           <span class=\"comment\">// 先排序</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">res</span> <span class=\"operator\">=</span> Arrays.binarySearch(arr, <span class=\"number\">4</span>);</span><br><span class=\"line\">        System.out.println(res);   <span class=\"comment\">// 找到返回下标</span></span><br><span class=\"line\">        res = Arrays.binarySearch(arr, <span class=\"number\">100</span>);</span><br><span class=\"line\">        System.out.println(res);   <span class=\"comment\">// 找不到返回 - 应该插入的位置 - 1， -6</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr_c = Arrays.copyOf(arr, <span class=\"number\">6</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr_c.length; i++) &#123;</span><br><span class=\"line\">            System.out.print(arr_c[i] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println();  <span class=\"comment\">// 1 2 3 0 0 0</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr_cor = Arrays.copyOfRange(arr_c, <span class=\"number\">1</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr_cor.length; i++) &#123;</span><br><span class=\"line\">            System.out.print(arr_cor[i] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println();  <span class=\"comment\">// 2 3 0 0 </span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// fill() equals()</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">5</span>];</span><br><span class=\"line\">        Arrays.fill(arr, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i : arr) &#123;</span><br><span class=\"line\">            System.out.print(i + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println();  <span class=\"comment\">//  0 0 1 1 1</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr_2 = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">5</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr_2.length; i++) &#123;</span><br><span class=\"line\">            Arrays.fill(arr_2, i, i+<span class=\"number\">1</span>, arr[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Arrays.equals(arr, arr_2)) System.out.println(<span class=\"string\">&quot;equal&quot;</span>);  <span class=\"comment\">// equal</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"多维数组\">多维数组<a title=\"#多维数组\" href=\"#多维数组\"></a></h2>\n<p>在Java中，二维数组是数组的数组<br>\n在创建二维数组时，也可以先为第一维分配空间，然后再为第二维分配空间。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[][] arr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">2</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span>[][] arr_1 = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">2</span>][];</span><br><span class=\"line\">        arr_1[<span class=\"number\">0</span>]= <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\">        arr_1[<span class=\"number\">1</span>] = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">5</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr_1.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; arr_1[i].length; j++) &#123;</span><br><span class=\"line\">                System.out.print(arr_1[i][j] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"矩阵乘法\">矩阵乘法<a title=\"#矩阵乘法\" href=\"#矩阵乘法\"></a></h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Matrix</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span>[][] m;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Matrix</span><span class=\"params\">(<span class=\"type\">int</span> m[][])</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.m = m;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Matrix <span class=\"title function_\">multiply</span><span class=\"params\">(Matrix M)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> res[][] = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[m.length][M.m[<span class=\"number\">0</span>].length];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; res.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; res[<span class=\"number\">0</span>].length; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">k</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; k &lt; m[<span class=\"number\">0</span>].length; k++) &#123;</span><br><span class=\"line\">                    res[i][j] = res[i][j] + m[i][k] * M.m[k][j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Matrix</span>(res);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">show</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; m.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( i == <span class=\"number\">0</span> ) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; m[<span class=\"number\">0</span>].length; j++) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(j == <span class=\"number\">0</span>)    System.out.printf(<span class=\"string\">&quot;┏     &quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(j == m[<span class=\"number\">0</span>].length - <span class=\"number\">1</span>)   System.out.printf(<span class=\"string\">&quot;     ┓&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">else</span>  System.out.printf(<span class=\"string\">&quot;     &quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                System.out.println();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; m[i].length; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>( j == <span class=\"number\">0</span>)  System.out.printf(<span class=\"string\">&quot;┃%-5d&quot;</span>, m[i][j]);</span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>( j == m[i].length - <span class=\"number\">1</span>) System.out.printf(<span class=\"string\">&quot;%-5d┃&quot;</span>, m[i][j]);</span><br><span class=\"line\">                <span class=\"keyword\">else</span> System.out.printf(<span class=\"string\">&quot;%-5d&quot;</span>, m[i][j]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( i == m.length - <span class=\"number\">1</span> ) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; m[<span class=\"number\">0</span>].length; j++) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(j == <span class=\"number\">0</span>)    System.out.printf(<span class=\"string\">&quot;┗     &quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(j == m[<span class=\"number\">0</span>].length - <span class=\"number\">1</span>)   System.out.printf(<span class=\"string\">&quot;     ┛&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">else</span>  System.out.printf(<span class=\"string\">&quot;     &quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                System.out.println();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ========================================================</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[][] m_1 = &#123;&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">                &#123;-<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">1</span>&#125;&#125;;</span><br><span class=\"line\">        <span class=\"type\">int</span>[][] m_2 = &#123;&#123;<span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">0</span>, -<span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">                &#123;<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>&#125;,</span><br><span class=\"line\">                &#123;<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">6</span>, <span class=\"number\">3</span>&#125;&#125;;</span><br><span class=\"line\">        <span class=\"type\">Matrix</span> <span class=\"variable\">M_1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Matrix</span>(m_1);</span><br><span class=\"line\">        M_1.show();</span><br><span class=\"line\">        <span class=\"type\">Matrix</span> <span class=\"variable\">M_2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Matrix</span>(m_2);</span><br><span class=\"line\">        M_2.show();</span><br><span class=\"line\">        <span class=\"type\">Matrix</span> <span class=\"variable\">M_3</span> <span class=\"operator\">=</span> M_1.multiply(M_2);</span><br><span class=\"line\">        M_3.show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/Typora/202305091124076.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"字符串\">字符串<a title=\"#字符串\" href=\"#字符串\"></a></h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> UnsupportedEncodingException &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 字面量 创建字符串</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;PHP is the best language all of the world!&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">str_1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(<span class=\"string\">&quot;A cup of Java&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">byte</span>[] b = str.getBytes(<span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">str_2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(b, <span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\">        System.out.println(str_2);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>一些方法:<br>\n<code>public String(StringBuffer buffer)</code><br>\n<code>public String(StringBuilder buffer)</code><br>\n<code>public String substring(int beginIndex, int endIndex)</code><br>\n<code>public String toUpperCase()</code><br>\n<code>public String toLowerCase()</code><br>\n<code>public String trim()</code><br>\n<code>public boolean isEmpty()</code><br>\n<code>public String concat(String str)</code><br>\n<code>public String replace(char oldChar, char newChar)</code><br>\n<code>public char charAt(int index)</code><br>\n<code>public static String valueOf(double d)</code> 将参数转字符串<br>\n…<br>\n查找<br>\n<code>public int indexOf(int ch)</code><br>\n<code>public int indexOf(int ch, int fromIndex)</code><br>\n<code>public int indexOf(String str)</code><br>\n<code>public int indexOf(String str, int fromIndex)</code><br>\n<code>public int lastIndexOf(int ch)</code><br>\n<code>public int lastIndexOf(int ch, int endIndex)</code><br>\n<code>public int lastIndexOf(String str)</code><br>\n<code>public int lastIndexOf(String str, int endIndex)</code><br>\n…<br>\n字符串转数组<br>\n<code>public char[] toCharArray()</code><br>\n<code>public void getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)</code><br>\n<code>public byte[] getBytes()</code><br>\n<code>public byte[] getBytes(String charsetName)</code><br>\n…<br>\n字符串比较<br>\n<code>public boolean equals(String anotherString)</code><br>\n<code>public boolean equalsIgnoreCase(String anotherString)</code><br>\n<code>public int compareTo(String another)  比较Unicode值</code><br>\n<code>public int compareToIgnoreCase(String anotherString)</code><br>\n<code>public boolean startsWith(String prefix)</code><br>\n<code>public boolean endsWith(String suffix)</code><br>\n<code>public boolean contains(String str)</code><br>\n字符串拆分与组合<br>\n<code>public String[] split(String regex)</code><br>\n<code>public boolean matches(String regex)</code><br>\n<code>public static String join(CharSequence delimiter, CharSequence ...elements)</code></p>\n<h2 id=\"命令行参数\">命令行参数<a title=\"#命令行参数\" href=\"#命令行参数\"></a></h2>\n<p><code>public static void main(String []args)&#123;&#125;</code><br>\n<code>public static void main(String ...args)&#123;&#125;</code><br>\n用CMD运行的时候指定, 或者在IDEA中可以,</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/Typora/202305091231052.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/Typora/202305091232246.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p>Apply应用后在运行就可以了.</p>\n<h2 id=\"格式输出\">格式输出<a title=\"#格式输出\" href=\"#格式输出\"></a></h2>\n<p><code>public PrintStream printf(String format, Object ...args)</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/Typora/202305091235922.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p>“%s&quot;格式符也可以用在任何类型的数据上。对于”%s&quot;格式符号，如果参数值为 null,结果输出 null; 如果参数实现了 Formatter 接口，结果是调用 args.formatTo()的结果，否则结果是调用 args.toString()的结果</p>\n<p><code>public static String format(String format, Object ...args)</code><br>\n<code>public static String format(Locale l, String format, Object ...args)</code><br>\n这两个方法的功能是按照参数指定的格式，将args格式化成字符串返回。此外，在java.io.PrintStream类、java.io.PrintWriter类以及 java.util.Formatter类中都提供了相应的format()方法。它们的不同之处是方法的返回值不同。在各自类中的 format()方法返回各自类的一个对象.</p>\n<h2 id=\"stringbuilder-和-stringbuffer\">StringBuilder 和 StringBuffer<a title=\"#stringbuilder-和-stringbuffer\" href=\"#stringbuilder-和-stringbuffer\"></a></h2>\n<p>StringBuilder类和 StringBuffer类都表示可变字符串，即这两个类的对象内容是可以修改的。一般来说，只要使用字符串的地方，都可以使用 StringBuilder/StringBuffer类，它们比 String类更灵活。</p>\n<h3 id=\"stringbuilder\">StringBuilder<a title=\"#stringbuilder\" href=\"#stringbuilder\"></a></h3>\n<p><code>public StringBuilder()</code><br>\n创建一个没有字符的字符串缓冲区，初始容量为16个字符。此时length()方法的值为0,而capacity()方法的值为16<br>\n<code>public StringBuilder(int capacity)</code><br>\n<code>public StringBuilder(String str)</code><br>\n利用一个已存在的字符串对象 str创建一个字符串缓冲区对象，另外再分配16个字符的缓冲区</p>\n<p>StringBuilder类除定义了 <code>length()、charAt()、indexOf()、getChars()</code>等方法外，还提供<br>\n了下列常用方法<br>\n<code>public int capacity()</code><br>\n<code>public void setCharAt(int index,char ch)</code><br>\n<code>public StringBuilder append(String str)</code><br>\n<code>public StringBuilder insert(int offset, String str)</code><br>\n<code>public StringBuilder deleteCharAt(int index)</code><br>\n<code>public StringBuilder delete(int start, int end)</code><br>\n<code>public StringBuilder replace(int start, int end, String str)</code><br>\n<code>public StringBuilder reverse()</code><br>\n<code>public String substring(int start)</code><br>\n<code>public String substring(int start, int end)</code><br>\n<code>public void setLength(int newLength)</code><br>\n更多见文档 <a href=\"https://docs.oracle.com/en/java/javase/19/docs/api/java.base/java/lang/StringBuilder.html\" target=\"_blank\">https://docs.oracle.com/en/java/javase/19/docs/api/java.base/java/lang/StringBuilder.html</a></p>\n<h2 id=\"知识点\">知识点<a title=\"#知识点\" href=\"#知识点\"></a></h2>\n<ol>\n<li>Java中String对象是不可变的字符串, 方法不能改变对象本身, 只返回新的字符串.</li>\n<li>在 Java语言中不支持运算符重载，但有一个特例，即&quot;+“运算符(包括+=)是唯一重载的运算符。该运算符除用于计算两个数之和外，还用于连接两个字符串。当用”+&quot;运算符连接的两个操作数其中有一个是 String类型时，该运算即为字符串连接运算.</li>\n<li>StringBuffer类的实例是线程安全的，而StringBuilder类的实例不是线程安全的。如果不需要线程同步，建议使用 StringBuilder类</li>\n</ol>\n<p><strong>参考</strong></p>\n<ol>\n<li>《Java程序设计(第3版)》 IBSN 9787302485520</li>\n<li><a href=\"https://docs.oracle.com/en/java/javase/19/docs/api/index.html\" target=\"_blank\">Java API 文档</a></li>\n</ol>\n","prev":{"title":"[Java笔记]基础","link":"2023/04/24/[Java笔记]基础"},"next":{"title":"[C++笔记]基础","link":"2023/04/22/[C++笔记]基础"},"plink":"https://s1acr.github.io/2023/04/24/[Java笔记]数组&字符串/","toc":[{"id":"数组","title":"数组","index":"1"},{"id":"可变参数(variable-argument)","title":"可变参数(variable argument)","index":"2"},{"id":"arrays-类","title":"Arrays 类","index":"3"},{"id":"多维数组","title":"多维数组","index":"4","children":[{"id":"矩阵乘法","title":"矩阵乘法","index":"4.1"}]},{"id":"字符串","title":"字符串","index":"5"},{"id":"命令行参数","title":"命令行参数","index":"6"},{"id":"格式输出","title":"格式输出","index":"7"},{"id":"stringbuilder-和-stringbuffer","title":"StringBuilder 和 StringBuffer","index":"8","children":[{"id":"stringbuilder","title":"StringBuilder","index":"8.1"}]},{"id":"知识点","title":"知识点","index":"9"}],"reward":true,"copyright":{"author":"slacr_","license":"<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" target=\"_blank\"><img src = \"/lib/cc-by-nc-sa.svg\">CC BY-NC-ND 4.0</a>","published":"April 24, 2023","updated":"April 24, 2023"},"reading_time":"2176 words in 15 min"}