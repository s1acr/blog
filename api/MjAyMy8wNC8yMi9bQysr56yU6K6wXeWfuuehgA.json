{"title":"[C++笔记]基础","date":"2023-04-22T00:00:00.000Z","date_formatted":{"ll":"Apr 22, 2023","L":"04/22/2023","MM-DD":"04-22"},"link":"2023/04/22/[C++笔记]基础","comments":true,"categories":["C++"],"updated":"2023-04-22T00:00:00.000Z","content":"<blockquote>\n<p>C++课程笔记.</p>\n</blockquote>\n<h2 id=\"c++简介\">C++简介<a title=\"#c++简介\" href=\"#c++简介\"></a></h2>\n<p>C语言于1969年至1973年间，为了移植与开发UNIX操作系统，由<code>丹尼斯·里奇</code>(Dennis Ritchie)与肯·汤普逊(Ken Thompson)，以B语言为基础，在贝尔实验室设计、开发出来.<br>\n但C仅是一个面向过程的语言. 为了实现更好的C ,<code>比雅尼·斯特劳斯特鲁普</code>(Bjarne Stroustrup)博士在贝尔实验室工作期间在<code>20世纪80年代</code>发明并实现了C++. 起初，这种语言被称作“C with Classes” 作为C语言的增强版出现。随后，C++不断增加新特性。虚函数、运算符重载、多继承、标准模板库、异常处理、运行时类型信息、名字空间等概念逐渐纳入标准草案。1998年，国际标准组织颁布了C++程序设计语言的第一个国际标准ISO/IEC 14882:1998.</p>\n<h3 id=\"c++程序过程\">C++程序过程<a title=\"#c++程序过程\" href=\"#c++程序过程\"></a></h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/Typora/202304222105609.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p>通过编辑器等手段将程序输入到计算机, 生成<code>.cpp</code>磁盘文件, 编译器进行编译转换为机器语言文件<code>.obj</code>, 再将多个目标文件与库文件等链接生成可执行文件, 然后运行/调试.</p>\n<h3 id=\"c++关键字\">C++关键字<a title=\"#c++关键字\" href=\"#c++关键字\"></a></h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/Typora/202304222121166.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<h3 id=\"c++标识符\">C++标识符<a title=\"#c++标识符\" href=\"#c++标识符\"></a></h3>\n<ul>\n<li>以大写字母、小写字母或下划线开始。</li>\n<li>可以由以大写字母、小写字母、下划线或数字 O~9 组成</li>\n<li>大小写敏感, 不能是C++关键字</li>\n</ul>\n<h3 id=\"基本数据类型\">基本数据类型<a title=\"#基本数据类型\" href=\"#基本数据类型\"></a></h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/Typora/202304222125406.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"基础\">基础<a title=\"#基础\" href=\"#基础\"></a></h2>\n<h3 id=\"位运算\">位运算<a title=\"#位运算\" href=\"#位运算\"></a></h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> num_1 = <span class=\"number\">015</span>; <span class=\"comment\">// 001 101</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> num_2 = <span class=\"number\">016</span>; <span class=\"comment\">// 001 110</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> num_3 = <span class=\"number\">0xffffffff</span>; <span class=\"comment\">// x86 32位1</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> num_4 = <span class=\"number\">0x7fffffff</span>; <span class=\"comment\">// x86 0, 31位1</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> num_5 = <span class=\"number\">0xf0ffffff</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%o\\n&quot;</span>, num_1 &amp; num_2);  <span class=\"comment\">//按位与 014, 001 100</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%o\\n&quot;</span>, num_1 | num_2);  <span class=\"comment\">//按位或 017, 001 111</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%o\\n&quot;</span>, num_1 ^ num_2);  <span class=\"comment\">//按位异或 03, 000 011</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%x\\n&quot;</span>, ~num_3);\t\t\t<span class=\"comment\">//按位取反  0</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%o\\n&quot;</span>, num_1 &lt;&lt; <span class=\"number\">2</span>);\t\t<span class=\"comment\">//左移两位 064, 110 100</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%o\\n&quot;</span>, num_1 &gt;&gt; <span class=\"number\">2</span>);\t\t<span class=\"comment\">//右移两位 03, 000 011</span></span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 右移有两种补法, 要么补符号位, 要么补0, 测试的是补符号位 </span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%x\\n&quot;</span>, num_3 &gt;&gt; <span class=\"number\">4</span>);\t\t<span class=\"comment\">//右移4位 ffffffff, 每次移位会补上符号位1</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%x\\n&quot;</span>, num_3 &lt;&lt; <span class=\"number\">4</span>);\t\t<span class=\"comment\">//左移4位 fffffff0</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%x\\n&quot;</span>, num_4 &gt;&gt; <span class=\"number\">4</span>);\t\t<span class=\"comment\">//右移4位 07ffffff, 每次移位会补上符号位0</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%x\\n&quot;</span>, num_4 &lt;&lt; <span class=\"number\">4</span>);\t\t<span class=\"comment\">//左移4位 fffffff0</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 无论左移右移, 移出的位数都舍去</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%x\\n&quot;</span>, num_5 &lt;&lt; <span class=\"number\">4</span>);\t\t<span class=\"comment\">//左移4位 0ffffff0, 符号位移去了</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"类型转换\">类型转换<a title=\"#类型转换\" href=\"#类型转换\"></a></h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 隐式转换, 从低到高</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"number\">90</span> + <span class=\"number\">0.3333</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 显示转换</span></span><br><span class=\"line\">\tcout &lt;&lt; (<span class=\"type\">int</span>)<span class=\"number\">90.5</span> &lt;&lt; endl; \t<span class=\"comment\">// C 风格, float --&gt; int 截断 90</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"built_in\">int</span>(<span class=\"number\">90.5</span>) &lt;&lt; endl;  <span class=\"comment\">// C++ 风格</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 四种转换操作符</span></span><br><span class=\"line\">\t<span class=\"comment\">// const_cast&lt;type&gt;(expression)</span></span><br><span class=\"line\">\t<span class=\"comment\">// dynamic_cast&lt;type&gt;(expression)</span></span><br><span class=\"line\">\t<span class=\"comment\">// reinterpret_cast&lt;type&gt;(expression)</span></span><br><span class=\"line\">\t<span class=\"comment\">// static_cast&lt;type&gt;(expression)</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"built_in\">static_cast</span>&lt;<span class=\"type\">bool</span>&gt;(<span class=\"string\">&quot;slacr&quot;</span>) &lt;&lt; endl; <span class=\"comment\">// 1</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"简单i/o-格式控制\">简单I/O 格式控制<a title=\"#简单i/o-格式控制\" href=\"#简单i/o-格式控制\"></a></h3>\n<p><code>iostream 和 iomanip </code>库中有些控制格式的函数和常量标识符<br>\n<a href=\"https://zh.cppreference.com/w/cpp/header/iomanip\" target=\"_blank\">https://zh.cppreference.com/w/cpp/header/iomanip</a><br>\n<a href=\"https://learn.microsoft.com/zh-cn/cpp/standard-library/ios?view=msvc-170\" target=\"_blank\">https://learn.microsoft.com/zh-cn/cpp/standard-library/ios?view=msvc-170</a><br>\n<a href=\"https://zh.cppreference.com/w/cpp/header/ios\" target=\"_blank\">https://zh.cppreference.com/w/cpp/header/ios</a></p>\n<p>可能用到的几个</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">int</span> hex_num = <span class=\"number\">0xffffffff</span>;\t\t<span class=\"comment\">// x86 32位1</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// ios</span></span><br><span class=\"line\">\tcout &lt;&lt; oct &lt;&lt; hex_num &lt;&lt; endl;\t\t\t<span class=\"comment\">// 37777777777_O, 32位1</span></span><br><span class=\"line\"> \tcout &lt;&lt; dec &lt;&lt; hex_num &lt;&lt; endl;\t\t\t<span class=\"comment\">// 4294967295_D, 2^32-1</span></span><br><span class=\"line\">\tcout &lt;&lt; hex &lt;&lt; hex_num &lt;&lt; endl;\t\t\t<span class=\"comment\">// ffffffff_H</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; noboolalpha &lt;&lt; <span class=\"literal\">true</span> &lt;&lt; endl;\t<span class=\"comment\">// 1</span></span><br><span class=\"line\">\tcout &lt;&lt; boolalpha &lt;&lt; <span class=\"literal\">true</span> &lt;&lt; endl;\t\t<span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; dec &lt;&lt; showpos;\t\t\t\t\t<span class=\"comment\">// 显示符号</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"number\">-1</span> &lt;&lt; endl;\t\t\t\t\t\t<span class=\"comment\">// -1</span></span><br><span class=\"line\">\tcout &lt;&lt;  <span class=\"number\">1</span> &lt;&lt; endl;\t\t\t\t\t\t<span class=\"comment\">// +1</span></span><br><span class=\"line\">\tcout &lt;&lt; noshowpos;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; fixed &lt;&lt; <span class=\"number\">333.222211</span> &lt;&lt; endl;\t<span class=\"comment\">// 显示浮点的默认6位, 超过则是defaultfloat</span></span><br><span class=\"line\">\tcout &lt;&lt; scientific &lt;&lt; <span class=\"number\">333.22221</span> &lt;&lt; endl;<span class=\"comment\">// 科学计数法</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// iomanip</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"built_in\">setw</span>(<span class=\"number\">6</span>) &lt;&lt; left &lt;&lt; <span class=\"built_in\">setfill</span>(<span class=\"string\">&#x27;?&#x27;</span>) &lt;&lt; <span class=\"string\">&quot;||&quot;</span> &lt;&lt; <span class=\"string\">&quot;||&quot;</span> &lt;&lt; endl; </span><br><span class=\"line\">\t<span class=\"comment\">// 位宽6个字符, 左对齐, &#x27;?&#x27; 填充</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"built_in\">setprecision</span>(<span class=\"number\">2</span>) &lt;&lt; <span class=\"number\">7.33333</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"comment\">// 两位有效数字</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"自定义数据类型\">自定义数据类型<a title=\"#自定义数据类型\" href=\"#自定义数据类型\"></a></h3>\n<h4 id=\"typedef\">typedef<a title=\"#typedef\" href=\"#typedef\"></a></h4>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tstring fur_color;</span><br><span class=\"line\">\t<span class=\"type\">float</span> weight;</span><br><span class=\"line\">&#125; Cat;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tCat gaffe;</span><br><span class=\"line\">\tgaffe.fur_color = <span class=\"string\">&quot;orange&quot;</span>;</span><br><span class=\"line\">\tgaffe.weight = <span class=\"number\">18</span>;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;gaffe is a &quot;</span> &lt;&lt; gaffe.fur_color &lt;&lt; <span class=\"string\">&quot; cat&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// gaffe is a orange cat</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"enum\">enum<a title=\"#enum\" href=\"#enum\"></a></h4>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">enum</span> <span class=\"title class_\">Choice</span> &#123; A, B, C &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tChoice answer_sheet[<span class=\"number\">3</span>];</span><br><span class=\"line\">\tanswer_sheet[<span class=\"number\">0</span>] = A;</span><br><span class=\"line\">\tanswer_sheet[<span class=\"number\">1</span>] = A;</span><br><span class=\"line\">\tanswer_sheet[<span class=\"number\">2</span>] = B;</span><br><span class=\"line\">\t<span class=\"type\">int</span> score = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tChoice standard_answer[<span class=\"number\">3</span>] = &#123; C, A, B &#125;;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (answer_sheet[i] == standard_answer[i]) &#123;</span><br><span class=\"line\">\t\t\tscore++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;you got &quot;</span> &lt;&lt; score &lt;&lt; <span class=\"string\">&quot;/3 in total!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"函数\">函数<a title=\"#函数\" href=\"#函数\"></a></h2>\n<h3 id=\"内联函数\">内联函数<a title=\"#内联函数\" href=\"#内联函数\"></a></h3>\n<p>类的成员函数可以分为<code>内联函数和外联函数</code>。<code>内联函数是指那些定义在类体内的成员函数</code>，即该函数的函数体放在类体内。而说明在类体内，定义在类体外的成员函数叫外联函数。外联函数的函数体在类的实现部分。</p>\n<p>内联函数在调用时不是像一般的函数那样要转去执行被调用函数的函数体，执行完成后再转回调用函数中，执行其后语句，而是在调用函数处用内联函数体的代码来替换，这样将会节省调用开销，提高运行速度。</p>\n<p>内联函数与前面讲过的带参数的宏定义进行一下比较，它们的代码效率是一样的，但是内联函数要优于宏定义，因为内联函数遵循函数的类型和作用域规则，它与一般函数更相近，在一些编译器中，一旦关上内联扩展，将与一般函数一样进行调用，调试比较方便。</p>\n<p>内联函数不是在调用时发生控制转移, 内联函数在<code>编译时将函数体嵌入到调用处</code>, 节省了参数传递, 控制转移等开销.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"type\">void</span> <span class=\"title\">inline_func</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;just a inline_func |=_=|&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"函数默认参数\">函数默认参数<a title=\"#函数默认参数\" href=\"#函数默认参数\"></a></h3>\n<p>函数可以有默认参数, <code>默认参数只能排在参数表最后</code>. 并且声明和实现的时候函数的默认参数只用写一次, 否则重定义.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">getRes</span><span class=\"params\">(string ok = <span class=\"string\">&quot;&quot;</span>, string err = <span class=\"string\">&quot;&quot;</span>, string def = <span class=\"string\">&quot;nothing here&quot;</span>)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">getRes</span>(<span class=\"string\">&quot;everything is ok, sever is running...&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">getRes</span>(<span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;compile error, `syntax` invalid! &quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">getRes</span>();</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">getRes</span><span class=\"params\">(string ok <span class=\"comment\">/*= &quot;&quot;*/</span>, string err<span class=\"comment\">/* = &quot;&quot;*/</span>, string def <span class=\"comment\">/*= &quot;nothing here&quot;*/</span>)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (ok != <span class=\"string\">&quot;&quot;</span>)\tcout &lt;&lt; ok &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (err != <span class=\"string\">&quot;&quot;</span>) cout &lt;&lt; err &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> cout &lt;&lt; def &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"函数重载\">函数重载<a title=\"#函数重载\" href=\"#函数重载\"></a></h3>\n<p>函数名相同, 但形参<code>个数\\类型\\顺序</code>不同, 会被编译器判定为不同的函数. 在调用的过程中, 会根据同名函数的参数表判定调用哪一个函数.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Hero</span> &#123;</span><br><span class=\"line\">\tstring name = <span class=\"string\">&quot;undefined&quot;</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> ATK = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t<span class=\"type\">float</span> price = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">showAtrr</span><span class=\"params\">(Hero&amp; h)</span> </span>&#123;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;┏━━━━━━┳━━━━━━━━━━━━┓&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;┃ name ┃&quot;</span> &lt;&lt; <span class=\"built_in\">setw</span>(<span class=\"number\">12</span>) &lt;&lt; h.name &lt;&lt; <span class=\"string\">&quot;┃&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;┣━━━━━━╋━━━━━━━━━━━━┫&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;┃ ATK  ┃&quot;</span> &lt;&lt; <span class=\"built_in\">setw</span>(<span class=\"number\">12</span>) &lt;&lt; h.ATK &lt;&lt; <span class=\"string\">&quot;┃&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;┣━━━━━━╋━━━━━━━━━━━━┫&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;┃ price┃&quot;</span> &lt;&lt; <span class=\"built_in\">setw</span>(<span class=\"number\">12</span>) &lt;&lt; h.price &lt;&lt; <span class=\"string\">&quot;┃&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;┗━━━━━━┻━━━━━━━━━━━━┛&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setAtrr</span><span class=\"params\">(Hero&amp; hero, string name)</span> </span>&#123;</span><br><span class=\"line\">\thero.name = name;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;set name ok&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">showAtrr</span>(hero);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setAtrr</span><span class=\"params\">(Hero&amp; hero, <span class=\"type\">int</span> ATK)</span> </span>&#123;</span><br><span class=\"line\">\thero.ATK = ATK;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;set ATK ok&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">showAtrr</span>(hero);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setAtrr</span><span class=\"params\">(Hero&amp; hero, string name, <span class=\"type\">int</span> ATK, <span class=\"type\">float</span> price)</span> </span>&#123;</span><br><span class=\"line\">\thero.ATK = ATK;</span><br><span class=\"line\">\thero.name = name;</span><br><span class=\"line\">\thero.price = price;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;set all Atrr ok&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">showAtrr</span>(hero);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tHero h;</span><br><span class=\"line\">\t<span class=\"built_in\">setAtrr</span>(h, <span class=\"string\">&quot;ironman&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">setAtrr</span>(h, <span class=\"number\">9999</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">setAtrr</span>(h, <span class=\"string\">&quot;batman&quot;</span>, <span class=\"number\">888</span>, <span class=\"number\">19.99F</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/Typora/202304232200551.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"知识点\">知识点<a title=\"#知识点\" href=\"#知识点\"></a></h2>\n<ol>\n<li>实型常量默认为<code>double</code>, <code>float</code>型可以加后缀F以区分.</li>\n<li>标识不同进制可以加后缀 H(hexadecimal, HEX) O(Octal, OCT) D(Decimal, DEC) B(Binary BIN).</li>\n<li>八进制和十六进制能用转义字符表示 \\nnn \\xnnn. 字面量 0nnn, 0xnnn.</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"><span class=\"type\">int</span> num = <span class=\"number\">0x12</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> num_char = <span class=\"string\">&#x27;\\x12&#x27;</span>;</span><br><span class=\"line\">cout &lt;&lt; <span class=\"string\">&quot;num: &quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class=\"line\">cout &lt;&lt; <span class=\"string\">&quot;num_char: &quot;</span> &lt;&lt; num_char &lt;&lt; endl;</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/Typora/202304222153052.png\" alt=\"\" loading=\"lazy\"><br>\n4. 逗号也是一个运算符, 先求左式, 在求右式, 结果为左式.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">\tnum = (num++, num++, <span class=\"number\">3</span> * num);</span><br><span class=\"line\">\tcout &lt;&lt; num; <span class=\"comment\">// 6 </span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>参考</strong></p>\n<ol>\n<li>《C++语言程序设计（第4版）》 IBSN 9787302227984</li>\n<li><a href=\"https://zh.wikipedia.org/wiki/C%2B%2B\" target=\"_blank\">Wikipedia-C++</a></li>\n<li><a href=\"https://zh.cppreference.com/w/%E9%A6%96%E9%A1%B5\" target=\"_blank\">C++参考手册</a></li>\n<li><a href=\"https://learn.microsoft.com/zh-cn/cpp/standard-library/iomanip?view=msvc-170\" target=\"_blank\">Microsoft C++文档</a></li>\n</ol>\n","prev":{"title":"[Java笔记]数组&字符串","link":"2023/04/24/[Java笔记]数组&字符串"},"next":{"title":"[C]常用排序算法","link":"2023/04/22/[C]常用排序算法"},"plink":"https://s1acr.github.io/2023/04/22/[C++笔记]基础/","toc":[{"id":"c++简介","title":"C++简介","index":"1","children":[{"id":"c++程序过程","title":"C++程序过程","index":"1.1"},{"id":"c++关键字","title":"C++关键字","index":"1.2"},{"id":"c++标识符","title":"C++标识符","index":"1.3"},{"id":"基本数据类型","title":"基本数据类型","index":"1.4"}]},{"id":"基础","title":"基础","index":"2","children":[{"id":"位运算","title":"位运算","index":"2.1"},{"id":"类型转换","title":"类型转换","index":"2.2"},{"id":"简单i/o-格式控制","title":"简单I&#x2F;O 格式控制","index":"2.3"},{"id":"自定义数据类型","title":"自定义数据类型","index":"2.4","children":[{"id":"typedef","title":"typedef","index":"2.4.1"},{"id":"enum","title":"enum","index":"2.4.2"}]}]},{"id":"函数","title":"函数","index":"3","children":[{"id":"内联函数","title":"内联函数","index":"3.1"},{"id":"函数默认参数","title":"函数默认参数","index":"3.2"},{"id":"函数重载","title":"函数重载","index":"3.3"}]},{"id":"知识点","title":"知识点","index":"4"}],"reward":true,"copyright":{"author":"slacr_","license":"<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" target=\"_blank\"><img src = \"/lib/cc-by-nc-sa.svg\">CC BY-NC-ND 4.0</a>","published":"April 22, 2023","updated":"April 22, 2023"},"reading_time":"1953 words in 13 min"}