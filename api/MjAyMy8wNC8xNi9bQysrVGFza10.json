{"title":"[C++Task]","date":"2023-04-16T00:00:00.000Z","date_formatted":{"ll":"Apr 16, 2023","L":"04/16/2023","MM-DD":"04-16"},"link":"2023/04/16/[C++Task]","comments":true,"categories":["C++"],"updated":"2023-04-16T00:00:00.000Z","content":"<blockquote>\n<p>C++作业</p>\n</blockquote>\n<h2 id=\"task2_3\">task2_3<a title=\"#task2_3\" href=\"#task2_3\"></a></h2>\n<h3 id=\"题目\">题目<a title=\"#题目\" href=\"#题目\"></a></h3>\n<p>教材习题4_20：定义满足要求的复数类Complex类<br>\n【问题描述】<br>\n定义一个复数类Complex，使得下面的代码能够工作。（注：下列代码需放在主函数中。）<br>\nComplex c1(3,5);    //用复数3+5i初始化c1<br>\nComplex c2=4.5;     <a href=\"//xn--4-6c2b230a3lq.xn--5c2-2h2en8bl4w\">//用实数4.5初始化c2</a><br>\nc1.add(c2);   //将c1与c2相加，结果保存在c1中<br>\nc1.show(); //将c1输出（这时的结果应该是7.5+5i）<br>\n【输入形式】<br>\n无<br>\n【输出形式】<br>\n7.5+5i<br>\n【样例输入】<br>\n【样例输出】<br>\n7.5+5i</p>\n<h3 id=\"解答\">解答<a title=\"#解答\" href=\"#解答\"></a></h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Complex</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"type\">double</span> a;</span><br><span class=\"line\">\t<span class=\"type\">double</span> b;</span><br><span class=\"line\">\t<span class=\"built_in\">Complex</span>() :<span class=\"built_in\">a</span>(<span class=\"number\">0</span>), <span class=\"built_in\">b</span>(<span class=\"number\">0</span>) &#123;&#125;;</span><br><span class=\"line\">\t<span class=\"built_in\">Complex</span>(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b):<span class=\"built_in\">a</span>(a), <span class=\"built_in\">b</span>(b)&#123;&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">Complex</span>(<span class=\"type\">double</span> num) &#123;     <span class=\"comment\">// 重载拷贝构造</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;a = num;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;b = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\">Complex&amp; <span class=\"title\">add</span><span class=\"params\">(Complex&amp; comp)</span> </span>&#123;</span><br><span class=\"line\">\t\ta += comp.a;</span><br><span class=\"line\">\t\tb += comp.b;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tComplex&amp; <span class=\"keyword\">operator</span>=(<span class=\"type\">double</span> num) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;a = num;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"keyword\">this</span>-&gt;a &lt;&lt; showpos &lt;&lt; <span class=\"keyword\">this</span>-&gt;b&lt;&lt; <span class=\"string\">&quot;i&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\">Complex <span class=\"title\">c1</span><span class=\"params\">(<span class=\"number\">3</span>, <span class=\"number\">5</span>)</span></span>;    <span class=\"comment\">//用复数3+5i初始化c1</span></span><br><span class=\"line\">\tComplex c2 = <span class=\"number\">4.5</span>;     <span class=\"comment\">//用实数4.5初始化c2  // 这个相当于c2(4.5), 要重载的是拷贝构造,而不是内置的=运算符</span></span><br><span class=\"line\">\tc1.<span class=\"built_in\">add</span>(c2);   <span class=\"comment\">//将c1与c2相加，结果保存在c1中</span></span><br><span class=\"line\">\tc1.<span class=\"built_in\">show</span>(); <span class=\"comment\">//将c1输出（这时的结果应该是7.5+5i）</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>ClassType c = value 相当于 ClassType c(value)</p>\n<h2 id=\"task3_1\">task3_1<a title=\"#task3_1\" href=\"#task3_1\"></a></h2>\n<h3 id=\"题目-1\">题目<a title=\"#题目-1\" href=\"#题目-1\"></a></h3>\n<p>编写数学类，能求开平方，sin 绝对值，圆面积等操作<br>\n【样例输入输出】<br>\ninput a number:3.5<br>\nthe result of sqrt is:1.87083<br>\nthe result of sin is:-0.350783<br>\nthe result of fabs is:3<br>\nthe result of fabs is:3.5<br>\nthe result of area is:38.4845</p>\n<h3 id=\"解答-1\">解答<a title=\"#解答-1\" href=\"#解答-1\"></a></h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">class</span>  <span class=\"title class_\">myMath</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span>  <span class=\"type\">double</span>  <span class=\"title\">mysqrt</span><span class=\"params\">(<span class=\"type\">double</span>  x)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span>  <span class=\"type\">double</span>  <span class=\"title\">mysin</span><span class=\"params\">(<span class=\"type\">double</span>  x)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span>  <span class=\"type\">double</span>  <span class=\"title\">myfabs</span><span class=\"params\">(<span class=\"type\">double</span> x)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span>  <span class=\"type\">int</span>  <span class=\"title\">myfabs</span><span class=\"params\">(<span class=\"type\">int</span>  x)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span>  <span class=\"type\">double</span>  <span class=\"title\">circleArea</span><span class=\"params\">(<span class=\"type\">double</span>  x)</span></span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"type\">const</span>  <span class=\"type\">static</span>  <span class=\"type\">double</span>  PI;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">double</span> myMath::PI = <span class=\"number\">3.1415926</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">double</span>  <span class=\"title\">myMath::mysin</span><span class=\"params\">(<span class=\"type\">double</span>  x)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">sin</span>(x);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">double</span>  <span class=\"title\">myMath::mysqrt</span><span class=\"params\">(<span class=\"type\">double</span>  x)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">sqrt</span>(x);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">myMath::myfabs</span><span class=\"params\">(<span class=\"type\">double</span>  x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>  <span class=\"built_in\">fabs</span>(x);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span>  <span class=\"title\">myMath::myfabs</span><span class=\"params\">(<span class=\"type\">int</span>  x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>  <span class=\"built_in\">fabs</span>(x);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">double</span>  <span class=\"title\">myMath::circleArea</span><span class=\"params\">(<span class=\"type\">double</span>  x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>  PI * x * x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span>  <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">double</span>  x;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;input  a  number:&quot;</span>;</span><br><span class=\"line\">    cin &gt;&gt; x;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;the  result  of  sqrt  is:&quot;</span> &lt;&lt; myMath::<span class=\"built_in\">mysqrt</span>(x) &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;the  result  of  sin  is:&quot;</span> &lt;&lt; myMath::<span class=\"built_in\">mysin</span>(x) &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;the  result  of  fabs  is:&quot;</span> &lt;&lt; myMath::<span class=\"built_in\">myfabs</span>((<span class=\"type\">int</span>)x) &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;the  result  of  fabs  is:&quot;</span> &lt;&lt; myMath::<span class=\"built_in\">myfabs</span>(x) &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;the  result  of  area  is:&quot;</span> &lt;&lt; myMath::<span class=\"built_in\">circleArea</span>(x) &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>  <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编写工具类, 使用静态方法. 构造函数最好给成private,不能实例化对象. 只能通过类名调用</p>\n<h2 id=\"task5_1\">task5_1<a title=\"#task5_1\" href=\"#task5_1\"></a></h2>\n<h3 id=\"解答-2\">解答<a title=\"#解答-2\" href=\"#解答-2\"></a></h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span>  <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span>  <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span>  <span class=\"keyword\">namespace</span>  std;</span><br><span class=\"line\"><span class=\"keyword\">class</span>  <span class=\"title class_\">Mammal</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">Mammal</span>(string  name) :<span class=\"built_in\">name</span>(name)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;Con.Mammal&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ~<span class=\"built_in\">Mammal</span>()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;Des.Mammal&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"keyword\">protected</span>:</span><br><span class=\"line\">    string  name;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Dog</span> : <span class=\"keyword\">public</span> Mammal &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:   </span><br><span class=\"line\">    <span class=\"built_in\">Dog</span>(string name) :<span class=\"built_in\">Mammal</span>(name) &#123;   <span class=\"comment\">// 这一步</span></span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;Con.Dog:&quot;</span> &lt;&lt; Mammal::name &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ~<span class=\"built_in\">Dog</span>() &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;Des.Dog:&quot;</span> &lt;&lt; name &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span>  <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    string  name;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Input  Dog  Name:&quot;</span>;</span><br><span class=\"line\">    cin &gt;&gt; name;</span><br><span class=\"line\">    <span class=\"function\">Dog  <span class=\"title\">d</span><span class=\"params\">(name)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>  <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>派生类构造函数给继承的基类初始化</p>\n<h2 id=\"task6_3\">task6_3<a title=\"#task6_3\" href=\"#task6_3\"></a></h2>\n<h3 id=\"题目-2\">题目<a title=\"#题目-2\" href=\"#题目-2\"></a></h3>\n<p>【问题描述】<br>\n从键盘中读入最多不超过50个学生的学生信息（包括空格隔开的姓名、学号、年龄信息，以学号从低到高排序）</p>\n<p>人员类：包含姓名，年龄。</p>\n<p>学生类：继承自人员类，增加学号。</p>\n<p>【输入形式】<br>\n每次键盘读入最多不超过50个学生的学生信息：<br>\n第一行为学生人数；<br>\n后面每一行为空格隔开的学生学号、姓名、年龄，其中学号和年龄都是整数。<br>\n【输出形式】<br>\n分别以姓名顺序（从低到高）和年龄顺序（从低到高）将学生信息输出，每行输出一位学生的信息，其中学号占3位，姓名（英文）占6位，年龄占3位，均为右对齐。年龄相同时按姓名从低到高排序。两种顺序的输出结果用一行空行相隔。<br>\n【输入样例】</p>\n<p>4<br>\n1 aaa 22<br>\n45 bbb 23<br>\n54 ddd 20<br>\n110 ccc 19<br>\n【输出样例】</p>\n<p>1    aaa     22<br>\n45     bbb     23<br>\n110     ccc     19<br>\n54     ddd     20<br>\n110     ccc     19<br>\n54     ddd     20<br>\n1     aaa     22<br>\n45     bbb     23</p>\n<h3 id=\"解答-3\">解答<a title=\"#解答-3\" href=\"#解答-3\"></a></h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\tstring name;</span><br><span class=\"line\">\t<span class=\"type\">int</span> age;</span><br><span class=\"line\">\t<span class=\"built_in\">Person</span>()&#123;&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">Person</span>(string name, <span class=\"type\">int</span> age) : <span class=\"built_in\">name</span>(name), <span class=\"built_in\">age</span>(age)&#123;&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> : <span class=\"keyword\">public</span> Person &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"type\">int</span> code;</span><br><span class=\"line\">\t<span class=\"built_in\">Student</span>()&#123;&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">Student</span>(<span class=\"type\">int</span> code, string name, <span class=\"type\">int</span> age): <span class=\"built_in\">code</span>(code), <span class=\"built_in\">Person</span>(name, age)&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">myPred</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(Student s1, Student s2)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> s1.name &lt; s2.name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">myPred2</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(Student s1, Student s2)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> s1.age &lt; s2.age;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printvStus</span><span class=\"params\">(vector&lt;Student&gt;&amp; vStus)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 打印Stu数组</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;Student&gt;::iterator it = vStus.<span class=\"built_in\">begin</span>(); it != vStus.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"built_in\">setw</span>(<span class=\"number\">3</span>) &lt;&lt; it-&gt;code &lt;&lt; <span class=\"built_in\">setw</span>(<span class=\"number\">6</span>) &lt;&lt; it-&gt;name &lt;&lt; <span class=\"built_in\">setw</span>(<span class=\"number\">3</span>) &lt;&lt; it-&gt;age &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tvector&lt;Student&gt; vStus;</span><br><span class=\"line\">\t<span class=\"type\">int</span> num;</span><br><span class=\"line\">\tcin &gt;&gt; num;</span><br><span class=\"line\">\t<span class=\"type\">int</span> code;</span><br><span class=\"line\">\tstring name;</span><br><span class=\"line\">\t<span class=\"type\">int</span> age;</span><br><span class=\"line\">\t<span class=\"comment\">// 初始化vStus</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; num; i++) &#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; code &gt;&gt; name &gt;&gt; age;</span><br><span class=\"line\">\t\tvStus.<span class=\"built_in\">push_back</span>(*(<span class=\"keyword\">new</span> <span class=\"built_in\">Student</span>(code, name, age)));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 排序, 按姓名</span></span><br><span class=\"line\">\t<span class=\"built_in\">sort</span>(vStus.<span class=\"built_in\">begin</span>(), vStus.<span class=\"built_in\">end</span>(), <span class=\"built_in\">myPred</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printvStus</span>(vStus);</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">sort</span>(vStus.<span class=\"built_in\">begin</span>(), vStus.<span class=\"built_in\">end</span>(), <span class=\"built_in\">myPred2</span>());</span><br><span class=\"line\">\t<span class=\"comment\">// 排序, 按学号</span></span><br><span class=\"line\">\t<span class=\"built_in\">printvStus</span>(vStus);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>很基础的继承然后排序<br>\n要引入 iomanip<br>\n<code>setw()</code>设置输出流占位, 后面还可以跟<code>setfill()</code>指定填充符号</p>\n<h2 id=\"task7_3\">task7_3<a title=\"#task7_3\" href=\"#task7_3\"></a></h2>\n<h3 id=\"题目-3\">题目<a title=\"#题目-3\" href=\"#题目-3\"></a></h3>\n<p>【问题描述】<br>\n下面的程序能得到预期的结果吗？如何避免类似问题的发生？<br>\n请修改程序，使它得到我们想要的结果。即希望两个输出的值相同。<br>\n提示：struct在C++中也可以用来定义类，它与class的不同在于struct定义的类成员的默认访问权限是public。<br>\n#include <iostream><br>\nusing namespace std;<br>\nstruct Base1 {int x;};<br>\nstruct Base2 {float y;};<br>\nstruct Derived : Base1,Base2{};<br>\nint main()<br>\n{<br>\nDerived *pd=new Derived;<br>\npd-&gt;x=1;pd-&gt;y=2.0f;<br>\nvoid *pv = pd;<br>\nBase2 <em>pb=static_cast&lt;Base2</em>&gt;(pv);<br>\ncout&lt;<pd->y&lt;&lt;&quot; &quot;&lt;<pb->y&lt;&lt;endl;<br>\ndelete pd;<br>\nreturn 0;<br>\n}<br>\n【输入形式】<br>\n无<br>\n【输出形式】<br>\n2 2</p>\n<h3 id=\"解答-4\">解答<a title=\"#解答-4\" href=\"#解答-4\"></a></h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Base1</span> &#123; <span class=\"type\">int</span> x; &#125;;</span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Base2</span> &#123; <span class=\"type\">float</span> y; &#125;;</span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Derived</span> : <span class=\"keyword\">virtual</span> Base1,  <span class=\"keyword\">virtual</span> Base2 &#123;&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Derived* pd = <span class=\"keyword\">new</span> Derived;</span><br><span class=\"line\">    pd-&gt;x = <span class=\"number\">1</span>; </span><br><span class=\"line\">    pd-&gt;y = <span class=\"number\">2.0f</span>;</span><br><span class=\"line\">    <span class=\"comment\">// void* pv = pd;</span></span><br><span class=\"line\">    <span class=\"comment\">// Derived*转void*再转Base2* 会丢失数据, 因为Derived中继承的是vbptr指针, </span></span><br><span class=\"line\">\t<span class=\"comment\">// 转void*丢失指针信息, 再转Base* 会按照 float 类型 解释对应的 vbptr,</span></span><br><span class=\"line\">    <span class=\"comment\">// 正确的做法应该直接将Derived*转Base2*, 编译器会改变偏置值, 使指针名(对象入口)偏置到对应位置.  </span></span><br><span class=\"line\">    <span class=\"comment\">// 正确写法:</span></span><br><span class=\"line\">    Base2* pb = <span class=\"built_in\">static_cast</span>&lt;Base2*&gt;(pd);</span><br><span class=\"line\">    <span class=\"comment\">// Base2* pb = static_cast&lt;Base2*&gt;(pv);</span></span><br><span class=\"line\">    cout &lt;&lt; pd-&gt;y &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; pb-&gt;y &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> pd;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"task9_1\">task9_1<a title=\"#task9_1\" href=\"#task9_1\"></a></h2>\n<h3 id=\"题目-4\">题目<a title=\"#题目-4\" href=\"#题目-4\"></a></h3>\n<p>对类Point重载“++”（自增）、“–”（自减）运算符，要求同时重载前缀和后缀。</p>\n<h3 id=\"解答-5\">解答<a title=\"#解答-5\" href=\"#解答-5\"></a></h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span>  <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span>  <span class=\"keyword\">namespace</span>  std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Point</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> x,  y;</span><br><span class=\"line\">    <span class=\"built_in\">Point</span>() &#123;&#125;;</span><br><span class=\"line\">    <span class=\"built_in\">Point</span>(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y) : <span class=\"built_in\">x</span> (x), <span class=\"built_in\">y</span>(y) &#123;&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 前置++</span></span><br><span class=\"line\">    Point&amp; <span class=\"keyword\">operator</span>++() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>-&gt;x++;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>-&gt;y++;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 后置++</span></span><br><span class=\"line\">    Point&amp; <span class=\"keyword\">operator</span>++(<span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">        Point temp = *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>-&gt;x++;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>-&gt;y++;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Point&amp; <span class=\"keyword\">operator</span>--() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>-&gt;x--;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>-&gt;y--;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Point&amp; <span class=\"keyword\">operator</span>--(<span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">        Point temp = *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>-&gt;x--;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>-&gt;y--;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">display</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;(&quot;</span> &lt;&lt; x &lt;&lt; <span class=\"string\">&quot;,&quot;</span> &lt;&lt; y &lt;&lt; <span class=\"string\">&quot;)&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span>  <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Point  a, <span class=\"built_in\">b</span>(<span class=\"number\">5</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">    a = b++;</span><br><span class=\"line\">    a.<span class=\"built_in\">display</span>();</span><br><span class=\"line\">    a = ++b;</span><br><span class=\"line\">    a.<span class=\"built_in\">display</span>();</span><br><span class=\"line\">    a = --b;</span><br><span class=\"line\">    a.<span class=\"built_in\">display</span>();</span><br><span class=\"line\">    a = b--;</span><br><span class=\"line\">    a.<span class=\"built_in\">display</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"task9_2\">task9_2<a title=\"#task9_2\" href=\"#task9_2\"></a></h2>\n<h3 id=\"题目-5\">题目<a title=\"#题目-5\" href=\"#题目-5\"></a></h3>\n<p>定义一个时间类CTime，分钟和秒钟是其两个私有成员数据。输入一个起始时间和一个结束时间(起始时间早于结束时间)，通过运算符重载-（减号），计算这两个时间相隔多少秒钟。说明：这两个时间在同一小时之内，且采用60分钟60秒钟的计时分式，即从00:00-59:59。</p>\n<h3 id=\"解答-6\">解答<a title=\"#解答-6\" href=\"#解答-6\"></a></h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span>  <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span>  <span class=\"keyword\">namespace</span>  std;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span>  N  100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">CTime</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> minute;</span><br><span class=\"line\">    <span class=\"type\">int</span> hour;</span><br><span class=\"line\">    <span class=\"built_in\">CTime</span>() : <span class=\"built_in\">minute</span>(<span class=\"number\">0</span>), <span class=\"built_in\">hour</span>(<span class=\"number\">0</span>) &#123;&#125;;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">input</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        cin &gt;&gt; hour &gt;&gt; minute;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">beZero</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (minute == <span class=\"number\">0</span> &amp;&amp; hour == <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">getTotalMinutes</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> minute + hour * <span class=\"number\">60</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    CTime&amp; <span class=\"keyword\">operator</span>-(CTime&amp; ct) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> left = <span class=\"built_in\">getTotalMinutes</span>() - ct.<span class=\"built_in\">getTotalMinutes</span>();</span><br><span class=\"line\">        hour = left / <span class=\"number\">60</span>;</span><br><span class=\"line\">        minute = left % <span class=\"number\">60</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">ostream&amp; <span class=\"keyword\">operator</span>&lt;&lt;(ostream&amp; o,  CTime&amp; ct) &#123;</span><br><span class=\"line\">    o &lt;&lt; ct.<span class=\"built_in\">getTotalMinutes</span>() &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> o;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span>    <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    CTime  time[N];</span><br><span class=\"line\">    <span class=\"type\">int</span>  count = <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">        count++;</span><br><span class=\"line\">        time[<span class=\"number\">2</span> * count].<span class=\"built_in\">input</span>();</span><br><span class=\"line\">        time[<span class=\"number\">2</span> * count + <span class=\"number\">1</span>].<span class=\"built_in\">input</span>();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">while</span> (!(time[<span class=\"number\">2</span> * count].<span class=\"built_in\">beZero</span>() &amp;&amp; time[<span class=\"number\">2</span> * count + <span class=\"number\">1</span>].<span class=\"built_in\">beZero</span>()));</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; count; i++) &#123;</span><br><span class=\"line\">        cout &lt;&lt; time[<span class=\"number\">2</span> * i + <span class=\"number\">1</span>] - time[<span class=\"number\">2</span> * i] &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>    <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"task10_1\">task10_1<a title=\"#task10_1\" href=\"#task10_1\"></a></h2>\n<h3 id=\"题目-6\">题目<a title=\"#题目-6\" href=\"#题目-6\"></a></h3>\n<p>约瑟夫问题：n个骑士编号1，2，…，n，围坐在圆桌旁。编号为1的骑士从1开始报数，报到m的骑士出列，然后下一个位置再从1开始报数，找出最后留在圆桌旁的骑士编号。</p>\n<h3 id=\"解答-7\">解答<a title=\"#解答-7\" href=\"#解答-7\"></a></h3>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span>  <span class=\"keyword\">namespace</span>  std;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span>  <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;  a;</span><br><span class=\"line\">\t<span class=\"type\">int</span>  n, m, x = <span class=\"number\">0</span>;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;Input  n  and  m:&quot;</span>;</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\ta.<span class=\"built_in\">resize</span>(n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">\t\ta[i] = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//</span></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;::iterator vit = a.<span class=\"built_in\">begin</span>();</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (a.<span class=\"built_in\">size</span>() &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m - <span class=\"number\">1</span>; i++) &#123;  <span class=\"comment\">// 取模</span></span><br><span class=\"line\">\t\t\tvit++;    </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (vit == a.<span class=\"built_in\">end</span>()) vit = a.<span class=\"built_in\">begin</span>();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> dis = <span class=\"built_in\">distance</span>(<span class=\"built_in\">begin</span>(a), vit);</span><br><span class=\"line\">\t\ta.<span class=\"built_in\">erase</span>(vit);      <span class=\"comment\">// 擦除点之后的迭代器失效, 得重新获取</span></span><br><span class=\"line\">\t\tvit =  (a.<span class=\"built_in\">begin</span>() + dis == a.<span class=\"built_in\">end</span>() ? a.<span class=\"built_in\">begin</span>() : a.<span class=\"built_in\">begin</span>() + dis);   <span class=\"comment\">// 如果清除最后一个需要置为begin</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;Result:&quot;</span> &lt;&lt; a[<span class=\"number\">0</span>] &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>  <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>调试了半天, 主要实现迭代器怎么取模, 返回迭代器之间的距离用std::distance().</p>\n<p>第一眼想到方法的是不改变vector大小:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span>  <span class=\"keyword\">namespace</span>  std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">getSurvivorNum</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; v)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> it : v) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (it != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\tnum++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> num;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">soluteJoselphRing</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; v, <span class=\"type\">int</span> m)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"built_in\">getSurvivorNum</span>(v) &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> dist = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> total = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">\t\t\tdist++;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (v[(i + dist) % v.<span class=\"built_in\">size</span>()] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\ttotal++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (total == m) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ti = (i + dist) % v.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">\t\tv[i++] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> it : v) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (it != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\tv[<span class=\"number\">0</span>] = it;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> it;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span>  <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;  a;</span><br><span class=\"line\">\t<span class=\"type\">int</span>  n, m, x = <span class=\"number\">0</span>;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;Input  n  and  m:&quot;</span>;</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\ta.<span class=\"built_in\">resize</span>(n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\ta[i] = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//</span></span><br><span class=\"line\">\t<span class=\"built_in\">soluteJoselphRing</span>(a, m);</span><br><span class=\"line\">\t<span class=\"comment\">//</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;Result:&quot;</span> &lt;&lt; a[<span class=\"number\">0</span>] &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>  <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-47\">6-47<a title=\"#6-47\" href=\"#6-47\"></a></h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 表驱动法</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyDate</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">MyDate</span>(<span class=\"type\">int</span> m = <span class=\"number\">1</span>, <span class=\"type\">int</span> d = <span class=\"number\">1</span>, <span class=\"type\">int</span> y = <span class=\"number\">1900</span>) :<span class=\"built_in\">month</span>(m), <span class=\"built_in\">day</span>(d), <span class=\"built_in\">year</span>(y) &#123;&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setDate</span><span class=\"params\">(<span class=\"type\">int</span> m, <span class=\"type\">int</span> d, <span class=\"type\">int</span> y)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (d &gt; <span class=\"number\">31</span> || m &gt; <span class=\"number\">12</span> || m &lt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t\tmonth = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tday = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tyear = <span class=\"number\">1900</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tmonth = m;</span><br><span class=\"line\">\t\tday = d;</span><br><span class=\"line\">\t\tyear = y;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">friend</span> ostream&amp; <span class=\"keyword\">operator</span>&lt;&lt;(ostream&amp; os, <span class=\"type\">const</span> MyDate&amp; date) &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">static</span> string month_name[<span class=\"number\">13</span>] = &#123; <span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;January&quot;</span>, <span class=\"string\">&quot;February&quot;</span>, <span class=\"string\">&quot;March&quot;</span>, <span class=\"string\">&quot;April&quot;</span>, <span class=\"string\">&quot;May&quot;</span>, <span class=\"string\">&quot;June&quot;</span>, <span class=\"string\">&quot;July&quot;</span>, <span class=\"string\">&quot;August&quot;</span>, <span class=\"string\">&quot;September&quot;</span>, <span class=\"string\">&quot;October&quot;</span>, <span class=\"string\">&quot;November&quot;</span>, <span class=\"string\">&quot;December&quot;</span> &#125;;</span><br><span class=\"line\">\t\tos &lt;&lt; month_name[date.month] &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; date.day &lt;&lt; <span class=\"string\">&quot;, &quot;</span> &lt;&lt; date.year;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> os;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tMyDate&amp; <span class=\"keyword\">operator</span>++() &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> month_days = <span class=\"built_in\">days</span>(month, year);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (day &lt; month_days) &#123;</span><br><span class=\"line\">\t\t\tday++;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tday = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (month &lt; <span class=\"number\">12</span>) &#123;</span><br><span class=\"line\">\t\t\t\tmonth++;</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tmonth = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\tyear++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tMyDate <span class=\"keyword\">operator</span>++(<span class=\"type\">int</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"function\">MyDate <span class=\"title\">temp</span><span class=\"params\">(*<span class=\"keyword\">this</span>)</span></span>;</span><br><span class=\"line\">\t\t++(*<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tMyDate&amp; <span class=\"keyword\">operator</span>+=(<span class=\"type\">int</span> days) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; days; i++) &#123;</span><br><span class=\"line\">\t\t\t++(*<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"type\">int</span> month, day, year;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">days</span><span class=\"params\">(<span class=\"type\">int</span> m, <span class=\"type\">int</span> y)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">static</span> <span class=\"type\">int</span> month_days[<span class=\"number\">13</span>] = &#123; <span class=\"number\">0</span>,<span class=\"number\">31</span>,<span class=\"number\">28</span>,<span class=\"number\">31</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>,<span class=\"number\">31</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span> &#125;;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (m == <span class=\"number\">2</span> &amp;&amp; ((y % <span class=\"number\">4</span> == <span class=\"number\">0</span> &amp;&amp; y % <span class=\"number\">100</span> != <span class=\"number\">0</span>) || (y % <span class=\"number\">400</span> == <span class=\"number\">0</span>))) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">29</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> month_days[m];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"task12\">task12<a title=\"#task12\" href=\"#task12\"></a></h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MaxWid 20</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"type\">int</span> snakeMap[MaxWid][MaxWid] = &#123; <span class=\"number\">0</span> &#125;; </span><br><span class=\"line\">\t<span class=\"type\">int</span> num = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; (n + <span class=\"number\">1</span>) / <span class=\"number\">2</span>; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 总共 n x n 方阵, 从外向内有 (n+1)/2  层</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 第一个从左到右的情况必须是满一行的, 因为奇数情况下需要最后填一次</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 其他的随便循环怎么写, 把一圈遍历完就可以</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i; j &lt; n - i; j++) &#123;</span><br><span class=\"line\">\t\t\tsnakeMap[i][j] = num++;\t\t\t\t\t<span class=\"comment\">// 从左向右</span></span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i + <span class=\"number\">1</span>; j &lt; n - <span class=\"number\">1</span> - i; j++) &#123;</span><br><span class=\"line\">\t\t\tsnakeMap[j][n - <span class=\"number\">1</span> - i] = num++;\t\t\t<span class=\"comment\">// 从上往下</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i; j &lt; n - <span class=\"number\">1</span> - i; j++) &#123;</span><br><span class=\"line\">\t\t\tsnakeMap[n - <span class=\"number\">1</span> - i][n - <span class=\"number\">1</span> - j] = num++; <span class=\"comment\">// 从右往左</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i; j &lt; n - <span class=\"number\">1</span> - i; j++) &#123;</span><br><span class=\"line\">\t\t\tsnakeMap[n - <span class=\"number\">1</span> - j][i] = num++;\t\t\t<span class=\"comment\">// 从下往上</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//int i, j, k;</span></span><br><span class=\"line\">\t<span class=\"comment\">//for (k = 0; k &lt;= 2/n; k++) &#123;</span></span><br><span class=\"line\">\t<span class=\"comment\">//\tfor (j = k; j &lt; n - k; j++) snakeMap[k][j] = num++;</span></span><br><span class=\"line\">\t<span class=\"comment\">//\tfor (i = k + 1; i &lt; n - k; i++) snakeMap[i][n - k - 1] = num++;</span></span><br><span class=\"line\">\t<span class=\"comment\">//\tfor (j = n - k - 1 - 1; j &gt;= k; j--) snakeMap[n - k - 1][j] = num++;</span></span><br><span class=\"line\">\t<span class=\"comment\">//\tfor (i = n - k - 1 - 1; i &gt; k; i--) snakeMap[i][k] = num++;</span></span><br><span class=\"line\">\t<span class=\"comment\">//&#125;</span></span><br><span class=\"line\">\t<span class=\"comment\">// 课上给的答案, 原理都一样, 外层条件最好还是按  k &lt; (n + 1) / 2, 或 n/2取上限更准确, 不然偶数情况多了几次无效判断   </span></span><br><span class=\"line\">\t <span class=\"comment\">//打印输出</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"built_in\">setw</span>(<span class=\"number\">4</span>) &lt;&lt; <span class=\"built_in\">setfill</span>(<span class=\"string\">&#x27;*&#x27;</span>) &lt;&lt; snakeMap[i][j];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tcout &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/Typora/202305251445815.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p>写的另一种解法, 很巧妙</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">direction</span> &#123;</span><br><span class=\"line\">\tpair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; left = <span class=\"built_in\">make_pair</span>(<span class=\"number\">0</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">\tpair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; right = <span class=\"built_in\">make_pair</span>(<span class=\"number\">0</span>, <span class=\"number\">-1</span>);</span><br><span class=\"line\">\tpair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; up = <span class=\"built_in\">make_pair</span>(<span class=\"number\">-1</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">\tpair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; down = <span class=\"built_in\">make_pair</span>(<span class=\"number\">1</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">direction d;</span><br><span class=\"line\">pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; directions[] = &#123; d.left, d.down, d.right, d.up &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\tvector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; arr;</span><br><span class=\"line\">\tarr.<span class=\"built_in\">resize</span>(n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"built_in\">size</span>(); i++) &#123; arr[i].<span class=\"built_in\">resize</span>(n);&#125;</span><br><span class=\"line\">\t<span class=\"type\">int</span> idx = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> num = <span class=\"number\">1</span>;</span><br><span class=\"line\">\tpair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; next = directions[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t<span class=\"type\">int</span> size = n;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (num &lt;= n*n) &#123;    <span class=\"comment\">// 这里可以填[n*n, 2*n*n -1], 超过了会旋转回去</span></span><br><span class=\"line\">\t\tarr[i][j] = num++;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 四个点转向</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ((i == n - size &amp;&amp; j == size - <span class=\"number\">1</span>) || (i == size - <span class=\"number\">1</span> &amp;&amp; j == size - <span class=\"number\">1</span>) || (i == size - <span class=\"number\">1</span>) &amp;&amp; (j == n - size) || (i == n - size + <span class=\"number\">1</span> &amp;&amp; j == n - size)) &#123;</span><br><span class=\"line\">\t\t\tnext = directions[++idx % <span class=\"number\">4</span>];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (i == n - size + <span class=\"number\">1</span> &amp;&amp; j == n - size) size--;   <span class=\"comment\">// 缩小规模</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ti += next.first;</span><br><span class=\"line\">\t\tj += next.second;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"built_in\">setw</span>(<span class=\"number\">4</span>) &lt;&lt; <span class=\"built_in\">setfill</span>(<span class=\"string\">&#x27;*&#x27;</span>) &lt;&lt; arr[i][j];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tcout &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bitset&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;Input n:&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;Dec:&quot;</span> &lt;&lt; <span class=\"built_in\">setiosflags</span>(ios_base::dec) &lt;&lt; n &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; <span class=\"built_in\">resetiosflags</span>(ios_base::dec);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;Oct:&quot;</span> &lt;&lt; <span class=\"built_in\">setiosflags</span>(ios_base::oct) &lt;&lt; n &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; <span class=\"built_in\">resetiosflags</span>(ios_base::oct);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;Hex:&quot;</span> &lt;&lt; <span class=\"built_in\">setiosflags</span>(ios_base::hex) &lt;&lt; n &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; <span class=\"built_in\">resetiosflags</span>(ios_base::hex);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//cout &lt;&lt; endl;</span></span><br><span class=\"line\">\t<span class=\"comment\">//cout &lt;&lt; oct &lt;&lt; n &lt;&lt; endl;</span></span><br><span class=\"line\">\t<span class=\"comment\">//cout.setf(ios_base::uppercase);</span></span><br><span class=\"line\">\t<span class=\"comment\">//cout &lt;&lt; hex &lt;&lt; n &lt;&lt; endl;</span></span><br><span class=\"line\">\t<span class=\"comment\">//cout &lt;&lt; bitset&lt;8&gt;&#123;255&#125; &lt;&lt; endl;  // 1111 1111</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sstream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">class</span> T&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> string <span class=\"title\">toString</span><span class=\"params\">(<span class=\"type\">const</span> T &amp;v)</span> </span>&#123;</span><br><span class=\"line\">\tostringstream os;   <span class=\"comment\">// 创建输出字符串流</span></span><br><span class=\"line\">\tos &lt;&lt; v;\t\t\t<span class=\"comment\">// 写入数据</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> os.<span class=\"built_in\">str</span>();\t\t<span class=\"comment\">// 返回输出字符串流生成的字符串</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">class</span> T&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> T <span class=\"title\">fromString</span><span class=\"params\">(<span class=\"type\">const</span> string&amp; str)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\">istringstream <span class=\"title\">is</span><span class=\"params\">(str)</span></span>;\t\t<span class=\"comment\">// 创建输入字符串流</span></span><br><span class=\"line\">\tT v;\t\t\t\t\t\t</span><br><span class=\"line\">\tis &gt;&gt; v;\t\t\t\t\t<span class=\"comment\">// 从输入字符串流中读取 T 类型的数据</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> v;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"built_in\">toString</span>(<span class=\"number\">123</span>).<span class=\"built_in\">append</span>(<span class=\"built_in\">toString</span>(<span class=\"string\">&#x27;&amp;&#x27;</span>)) &lt;&lt; endl;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"built_in\">fromString</span>&lt;<span class=\"type\">int</span>&gt;(<span class=\"string\">&quot;34&amp;56&quot;</span>) &lt;&lt; endl;   <span class=\"comment\">// 只读取第一个该类型的数据</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"built_in\">fromString</span>&lt;<span class=\"type\">double</span>&gt;(<span class=\"string\">&quot;56.78**&quot;</span>) &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","prev":{"title":"[C++Lab]","link":"2023/04/16/[C++Lab]"},"next":{"title":"[Coding-relatedEnglish]","link":"2023/04/15/[Coding-relatedEnglish]"},"plink":"https://s1acr.github.io/2023/04/16/[C++Task]/","toc":[{"id":"task2_3","title":"task2_3","index":"1","children":[{"id":"题目","title":"题目","index":"1.1"},{"id":"解答","title":"解答","index":"1.2"}]},{"id":"task3_1","title":"task3_1","index":"2","children":[{"id":"题目-1","title":"题目","index":"2.1"},{"id":"解答-1","title":"解答","index":"2.2"}]},{"id":"task5_1","title":"task5_1","index":"3","children":[{"id":"解答-2","title":"解答","index":"3.1"}]},{"id":"task6_3","title":"task6_3","index":"4","children":[{"id":"题目-2","title":"题目","index":"4.1"},{"id":"解答-3","title":"解答","index":"4.2"}]},{"id":"task7_3","title":"task7_3","index":"5","children":[{"id":"题目-3","title":"题目","index":"5.1"},{"id":"解答-4","title":"解答","index":"5.2"}]},{"id":"task9_1","title":"task9_1","index":"6","children":[{"id":"题目-4","title":"题目","index":"6.1"},{"id":"解答-5","title":"解答","index":"6.2"}]},{"id":"task9_2","title":"task9_2","index":"7","children":[{"id":"题目-5","title":"题目","index":"7.1"},{"id":"解答-6","title":"解答","index":"7.2"}]},{"id":"task10_1","title":"task10_1","index":"8","children":[{"id":"题目-6","title":"题目","index":"8.1"},{"id":"解答-7","title":"解答","index":"8.2"}]},{"id":"6-47","title":"6-47","index":"9"},{"id":"task12","title":"task12","index":"10"}],"reward":true,"copyright":{"author":"slacr_","license":"<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" target=\"_blank\"><img src = \"/lib/cc-by-nc-sa.svg\">CC BY-NC-ND 4.0</a>","published":"April 16, 2023","updated":"April 16, 2023"},"reading_time":"3659 words in 24 min"}