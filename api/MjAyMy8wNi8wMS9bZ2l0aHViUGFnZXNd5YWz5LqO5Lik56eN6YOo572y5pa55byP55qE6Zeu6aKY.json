{"title":"[githubPages]关于两种部署方式的问题","date":"2023-06-01T00:00:00.000Z","date_formatted":{"ll":"Jun 1, 2023","L":"06/01/2023","MM-DD":"06-01"},"link":"2023/06/01/[githubPages]关于两种部署方式的问题","comments":true,"categories":["博客建设"],"updated":"2023-06-01T00:00:00.000Z","content":"<p>githubPages能够托管静态网页, 本站之前就是托管在github上的. github部署有两种方式:<br>\n第一种是以仓库项目页的形式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/2023-6/202306010115937.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p>得到的网站会以 <a href=\"http://username.github.io/reponame/\">username.github.io/reponame/</a>, 能直接从index.html进入, 现在还可以不以仓库根目录作为站点文件, 可以选择/docs 从而使项目展示页面和项目代码隔开.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/2023-6/202306010119464.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p>第二种是 创建以 <code>username.github.io</code> 为仓库名的仓库, 这种做法好处是可以直接通过 <a href=\"http://username.github.io\">username.github.io</a> 访问, 但又很大的弊端. 通过这种方式我们只能创建这一个githubPages, 如果再创建其他的会显示</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/2023-6/202306010126717.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p>因为指定了username.github.io这个仓库作为githubPages的根目录, 我们部署在其他项目页的githubpage得到的路径都是username.github.io开头的, 这就会出错, 因为会往username.github.io这个仓库下查找目录而不能是其他仓库. 本站一开始用的就是username.github.io作为仓库名, 之后我想再用githubPages部署其他仓库的页面发现失败了, 网上搜也没有什么相关的回答. 意识到了可能是这个问题, 把仓库名重新改一下就行了.</p>\n<p>但这样又有一个问题, 如果添加了域名的话. <a href=\"http://xn--CNAMEusernam-kt4sms06ax7j50oqog87b347awqudb9860coifvvc884me80fzita.github.io\">原本使用CNAME解析将一个购买域名映射到usernam.github.io</a>, 而我们仓库名变了之后, <a href=\"http://xn--urlusername-338r775jhqde2a158exo7dga62r.github.io/reponame\">得到的url是带目录的username.github.io/reponame</a>.</p>\n<p>解决方案就是用vercel, 使用对应仓库创建vercel的project, 这样我们的项目就会缓存在vercel服务器上, 并且自动分配一个域名, 比如s1acr-github-io.vercel.app.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/2023-6/202306011134604.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p>点击domain, 设置域名, 进去添加解析, No redirect添加的是vercel给的域名的别名, 选redirect是将该域名重定向到别的域名, 根据自己需要配置.<br>\n<img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/2023-6/202306011139491.png\" alt=\"\" loading=\"lazy\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/2023-6/202306011151903.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p>这样就能用自己的域名访问了, 对于其他的仓库我们也可以同样的配置域名, 添加二级三级域名等子域名也是可以的, 比如a.b.c.slacr.size<br>\n这里其实就几乎没有用到githubPages了, 如果直接从我们设置的域名进入, 访问的不是username.github.io下的资源, 而是vercel的缓存资源, 速度还更快.<br>\n但如果启用githubPages并填写了域名也没什么关系, 仓库页会多一个githubPages的环境, <a href=\"http://xn--username-jo1oe24i2l6gp2a.github.io/reponame%E8%AE%BF%E9%97%AE\">如果通过username.github.io/reponame访问</a>, 会重定向到设置的域名, 这也是唯一的作用, 然后访问的还是vercel服务器.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/2023-6/202306011239779.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p>其实username.github.io这个能作为仓库名并能直接变相的通过仓库名访问,  就是github留下的彩蛋或者说特殊功能. 相似的还有 可以创建一个以username为仓库名的仓库, 其中的 <a href=\"http://README.md\">README.md</a> 可以成为个人主页信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/2023-6/202306010150993.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/s1acr/PicGoLib@main/2023-6/202306010151873.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"[VScode]配置C_C++开发环境","link":"2023/06/01/[VScode]配置C_C++开发环境"},"next":{"title":"[VS]MSVC添加C++万能头文件","link":"2023/05/29/[VS]MSVC添加C++万能头文件"},"plink":"https://s1acr.github.io/2023/06/01/[githubPages]关于两种部署方式的问题/","reward":true,"copyright":{"author":"slacr_","license":"<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" target=\"_blank\"><img src = \"/lib/cc-by-nc-sa.svg\">CC BY-NC-ND 4.0</a>","published":"June 1, 2023","updated":"June 1, 2023"},"reading_time":"841 words in 6 min"}